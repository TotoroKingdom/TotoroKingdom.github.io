<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>06-26</title>
    <url>/2020/06/26/06-26/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello HTML5</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>
    <center>
        <h1>导航栏</h1>
        <ol>
            <li><a href="#one">表格标签</a></li>
            <li><a href="#two">无序列表</a></li>
            <li><a href="#three">有序列表</a></li>
            <li><a href="#four">自定义列表</a></li>
            <li><a href="#five">表单域</a></li>
            <li><a href="#six">select下拉表单</a></li>
            <li><a href="#seven">textarea文本域</a></li>
        </ol>
    </center>

    <h1 id="one" align="center">表格标签</h1>
    <!--
        align:对齐方式
        border:是否有边框
        cellpadding:单元边缘与其内容之间的空白
        cellspacing:单元格之间的空白
        width:表格宽度
    -->
    <table align="center" border="1" cellpadding="5" cellspacing="0" width="300">
        <thead>
            <tr>
                <th>姓名</th>
                <th>性别</th>
                <th>年龄</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Tom</td>
                <td>boy</td>
                <td>12</td>
            </tr>
            <tr>
                <td>Jerry</td>
                <td>girl</td>
                <td>13</td>
            </tr>
            <!--
                跨行合并：rowspan="行数"
                跨列合并：colspan="列数"
            -->
            <tr>
                <td rowspan="2">跨行合并</td>
                <td colspan="2">跨列合并</td>

            </tr>
            <tr>
                <td>2</td>
                <td>2</td>
            </tr>
        </tbody>
    </table>

    <h1 id="two" align="center">无序列表</h1>
    <ul>
        <li>喜欢喝可乐QAQ</li>
        <li>喜欢喝啤酒QAQ</li>
        <li>
            <p>
                大哥喝阔乐
            </p>
        </li>
    </ul>

    <h1 id="three" align="center">有序列表</h1>
    <ol>
        <li>Tom跑不快 QAQ</li>
        <li>Jerry跑得快 QAQ</li>
    </ol>

    <h1 id="four" align="center">自定义列表</h1>
    <dl>
        <dt>悠悠鱼儿游</dt>
        <dd>翩翩雁儿飞</dd>
        <dd>天高任鸟飞</dd>
    </dl>

    <h1 id="five" align="center">表单域</h1>
    <!--
        action:url地址；用于指定接收并处理表单的服务器程序的url地址。
        method:get/post;用于设置表单数据的提交方式。
        name:名称;用于指定表单的名称，区分同一个页面的多个表单域。
    -->
    <form action="demo.php" method="POST" name="name1">
        <label for="username">用户名：</label>
        <input type="text" name="username" value="请输入用户名：" maxlength="20" id="username"><br>
        <label for="pwd">密&nbsp&nbsp&nbsp码：</label>
        <input type="password" name="password" value="请输入密码" id="pwd"><br> 性别:
        <input type="radio" name="sex" value="男" checked id="man">
        <label for="man">男</label>
        <input type="radio" name="sex" value="女" id="women">
        <label for="women">女</label><br> 爱好:
        <input type="checkbox" name="hobby" checked>吃饭
        <!--checked:默认勾选当前按钮-->
        <input type="checkbox" name="hobby" checked>睡觉
        <input type="checkbox" name="hobby" checked>打豆豆 <br>
        <!--
            type的属性值：
            button:按钮          checkbox:复选框         file:输入字段和浏览按钮          hidden:隐藏的输入字段     
            password:密码        radio:单选按钮          image:图像形式的提交按钮         text:单行的输入字段                                                   
            reset:重置按钮（清除表单数据）      submit:提交按钮（将表单数据发送到服务器）            
        -->
        <input type="submit" value="登录"><br>
        <input type="reset" value="重置"><br>
        <input type="button" value="发送短信"><br> 上传头像：
        <input type="file" value="上传头像"><br>
    </form>

    <h1 id="six" align="center">select下拉表单</h1>
    Where are you from?
    <select>
        <option>China</option>
        <option>America</option> 
        <option>Japan</option>   
        <option>England</option>
        <option selected>Mars</option>  
    </select>

    <h1 id="seven" align="center">textarea文本域</h1>
    <form>
        我的优点：
        <div class="box bluediv">
            <textarea cols="10" rows="1">QAQ帅帅帅</textarea>
        </div>

    </form>
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>06-22</title>
    <url>/2020/06/22/06-22/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>hello world</title>
<meta name="generator" content="Hexo 4.2.1"></head>
<!--body最好写一个！！！-->

<h1 id="one"><center>我是老大，我站中间。</center></h1>
<h2>仲</h2>
<h3>叔</h3>
<h4>季</h4>
<h5>钻石王老五</h5>
<h6>我是最小的老六，我没有弟弟了。</h6>

<h1 id="seven"><center>锚点链接</center></h1>
<body>
    <center><a href="#one">标题标签</a> </center>
    <center><a href="#two">段落与换行</a> </center>
    <center><a href="#three">字体标签</a> </center>
    <center><a href="#four">div和span</a> </center>
    <center><a href="#five">图片标签</a> </center>
    <center><a href="#six">超链接</a> </center>
    <center><a href="#seven">锚点链接</a></center>
</body>

<h1 id="two"><center>段落与换行</center></h1>
<body>
    <p>你好，世界。这是一个晴朗的上午。</p><p>
    </p><p>
        我想换个行。<br>
        我换好了。<br>
        我想换个段。
    </p>
    <p>我换好了。</p> 
    <p>为什么我的眼里常含泪水？因为我对这土地爱的深沉！</p>
</body>

<h1 id="three"><center>字体标签</center></h1>
<body>
        <strong>我很粗。</strong><br>
        <b>我也很粗！</b><br>
        <em>我喜欢斜着。</em><br>
        <i>我也是~</i><br>
        <del>我是删除线。</del><br>
        <s>你看不见我QAQ</s><br>
        <ins>我有下划线。</ins><br>
        <u>me too!</u><br>
</body>

<h1 id="four"><center>div和span</center></h1>
<body> 
    <div>div单独占一整行</div>
    <span>我是一个span</span>
    <span>span</span>
    <span>span</span>
</body>

<h1 id="five"><center>图片标签</center></h1>
<body>
    <center> <img src="/2020/06/22/06-22/blog\source\_posts\06-22\女朋友1号.jpg" alt="This is my girlfriend" title="本地图片" border="10"> </center>   
     <!--html  alt:图片显示不出来时显示的文字    title:放在图片上显示的文字。   width:宽度   height:高度     border:边框粗细-->
    <br>
    <img src="/2020/06/22/06-22/%E5%A5%B3%E6%9C%8B%E5%8F%8B1%E5%8F%B7.jpg" class title="beautiful girl">                                   <!--hexo-->
    <br>
    <center> <img src="https://wx2.sinaimg.cn/mw690/005O0Eg8ly1gg4hf5nhkhj31o01o0u0x.jpg" alt="girlfriend" title="新浪图片"></center>
    <h6><center>QQ图片</center></h6>
    <center> <img src="http://b385.photo.store.qq.com/psb?/V10JJMpe0HJpcz/rwR4H68.5VT16CH6*imnmGBIRBd00hMLWyC.mkvyh04!/b/dIEBAAAAAAAA&bo=jgUgAwAAAAARB5g!&rf=viewer_4" title="QQ图片"></center>
</body>

<h1 id="six"><center>超链接</center></h1>
<body>
    <center><a href="http://www.baidu.com" target="_blank">百度一下</a></center>
    <center><a href="http://634581304.qzone.qq.com" target="_self">QQ空间</a></center>
    <!--_blank：打开一个新的页面        _self：在当前页面打开-->
    <center>
        <a href="https://weibo.com/p/1005055319635720/photos?from=page_100505&mod=TAB#place" target="_blank">
            <img src="https://wx3.sinaimg.cn/mw690/005O0Eg8ly1gflu8k3f00j30u0140k1b.jpg">
        </a>
    </center>
    <!--内链接-->
</body>

<center>&copy;Tom猫和小太阳</center>
</html>]]></content>
  </entry>
  <entry>
    <title>06-30</title>
    <url>/2020/06/30/06-30/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>hello 字体</title>
    <link rel="stylesheet" href="style.css" <meta name="generator" content="Hexo 4.2.1"></head>
<body>
    <h1>导航栏</h1>
    <ol>
        <li><a href="#one">字体</a></li>
    </ol>

    <h1 id="one">字体</h1>
    <h2>水调歌头·明月几时有</h2>
    <p>明月几时有？把酒问青天。</p>
    <p>不知天上宫阙，今夕是何年。</p>
    <p>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</p>
    <p>起舞弄清影，何似在人间。</p>
    <p>转朱阁，低绮户，照无眠。</p>
    <p>不应有恨，何事长向别时圆？</p>
    <p>人有悲欢离合，月有阴晴圆缺，此事古难全。</p>
    <p>但愿人长久，千里共婵娟。</p>
</body>
</html>]]></content>
  </entry>
  <entry>
    <title>07-02</title>
    <url>/2020/07/02/07-02/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello JavaScript</title>
    <script src="test.js">
        //alert('Hello JavaScript');
    </script>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>
    <!-- <input type="button" value="点击一下" onclick="alert('点不动')"> -->
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>06-29</title>
    <url>/2020/06/29/06-29/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello CSS</title>
    <style>
        h1{
            color:royalblue;
            font-size: 30px;
        }
        h2{
            color: lightseagreen;
        }
        /*P{
            color: red;
            font-size: 20px;
        }*/
        div{
            color: green;
            font-size: 20px;            
        }
        .blue{
            color: blue;
            font-size: 20px;
        }
        .yellow{
            color: yellow;
            font-size: 20px;
        }
        .color-teal{
            color: teal;
            font-size: 20px;
        }
        .blueviolet{
            color: blueviolet;
            font-size: 20px;
        }
        .goldenrod{
            color: goldenrod;
            font-size: 20px;
        }
        .box {
            width: 100px;
            height: 100px;
            font-size: 30px;
        }
        .reddiv{
            color: white;
            background-color: red;
        }
        .greendiv{
            color: white;
            background-color: green;
        }
        .bluediv{
            color: white;
            background-color: blue;
        }
        #pink {
            color: pink;
        }
        /**{
            color: goldenrod;
            text-align: center;
        }*/
    </style>
<meta name="generator" content="Hexo 4.2.1"></head>
<body>
    <h1>导航栏</h1>
    <ol>
        <li><a href="#one">标签选择器</a></li>
        <li><a href="#two">class选择器</a></li>
        <li><a href="#three">id选择器</a></li>
        <li><a href="#four">通配符选择器</a></li>
    </ol>
    <h2 id="one">标签选择器</h2>
    <h1>将进酒</h1>
    <p>
        君不见，黄河之水天上来，奔流到海不复回。
    </p>
    <div>
        君不见，高堂明镜悲白发，朝如青丝暮成雪。
    </div>
    <ul>
        <li class="blue">人生得意须尽欢，莫使金樽空对月。</li>
        <li class="yellow">天生我材必有用，千金散尽还复来。</li>
        <li class="color-teal">烹羊宰牛且为乐，会须一饮三百杯。</li>
    </ul>
    <h2 id="two">类选择器</h2>
    <ol class="blueviolet">
        <li>岑夫子</li>
        <li>丹丘生</li>
        <li>将进酒</li>
        <li>杯莫停</li>
    </ol>
    <dl class="goldenrod">
        <dt>与君歌一曲，请君为我倾耳听。</dt>
        <dd>钟鼓馔玉不足贵，但愿长醉不复醒。</dd>
        <dd>古来圣贤皆寂寞，惟有饮者留其名。</dd>
        <dd>陈王昔时宴平乐，斗酒十千恣欢谑。</dd>
        <dd>主人何为言少钱，径须沽取对君酌。</dd>
        <dd>五花马，千金裘，呼儿将出换美酒，与尔同销万古愁。</dd>
    </dl>

    <div class="box reddiv">
        跳跳
    </div>
    <div class="box greendiv">
        逗逗
    </div>
    <div class="box bluediv">
        蹦蹦
    </div>
    <h2 id="three">id选择器</h2>
    <!--id只能用一次,经常和javascript搭配使用-->
    <div id="pink" class="box">
        达达
    </div>
    <h2 id="four">通配符选择器</h2>
    <div>
        草木凋零，美人迟暮。
    </div>
</body>
</html>]]></content>
  </entry>
  <entry>
    <title>2020-6-7</title>
    <url>/2020/06/07/2020-6-7/</url>
    <content><![CDATA[<h1 id="悲伤的日子"><a href="#悲伤的日子" class="headerlink" title="悲伤的日子"></a>悲伤的日子</h1><p>今天注定是个悲伤的日子，外面的大雨夹杂着悲伤的空气，悲凉的凉风拍打着窗台。</p>
<p>公元2020年6月5日</p>
<p>在弄了一整天的数据库安装后，我终于放弃了。</p>
<p>怀揣着无比悲凉的心写下这篇博客，记录自己无比痛苦的一天，真是灵魂遭到折磨的一天。</p>
<p>明天考试，希望有好运。</p>
<p>可一想起自己即将挂科。</p>
<p>泪水就止不住的往下涌。</p>
<p> 。</p>
<p>。</p>
<p>。</p>
<p>。</p>
<center><font color="blue" size="6" face="STCAIYUN">
    风潇潇兮易水寒，壮士一去兮不复返。
</font></center>]]></content>
  </entry>
  <entry>
    <title>07-01</title>
    <url>/2020/07/01/07-01/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=>, initial-scale=1.0">
    <title>复合选择器</title>
    <link rel="stylesheet" href="07-01\style.css">
<meta name="generator" content="Hexo 4.2.1"></head>

<body>
    <h1>复合选择器~导航栏</h1>
    <div><a href="#one">后代选择器</a></div>
    <div><a href="#two">子元素选择器</a></div>
    <div><a href="#three">并集选择器</a></div>
    <div><a href="#four">伪类选择器</a></div>
    <div><a href="#five">focus伪类选择器</a></div>
    <h1 id="one">后代选择器</h1>
    <ul>
        <li>醉里挑灯看剑</li>
        <li>梦回吹角连营</li>
    </ul>

    <ol>
        <li>八百里分麾下炙</li>
        <li>五十弦翻塞外声</li>
        <li>沙场秋点兵</li>
    </ol>
    <h1 id="two">子元素选择器</h1>
    <div class="grey">
        <p>
            马作的卢飞快
            <div>
                <p>
                    弓如霹雳弦惊
                </p>
            </div>
        </p>
        <p>
            了却君王天下事<br> 赢得生前身后名
            <br> 可怜白发生
        </p>
    </div>
    
    <h1 id="three">并集选择器</h1>
    <div>
        枯藤老树昏鸦
    </div>
    <p>
        小桥流水人家
    </p>
    <span>
        古道西风瘦马
    </span>
    <ul class="gold">
        <li>夕阳西下</li>
        <li>断肠人在天涯</li>
    </ul>
    <h1 id="four">伪类选择器</h1>
    <a href="https://user.qzone.qq.com/634581304/infocenter" target="_blank">love&peace</a>
    <a href="https://totorokingdom.github.io/" target="_blank">悠悠鱼儿游</a>
    <a href="https://totorokingdom.github.io/about/" target="_blank">about me</a>
    <a href="https://totorokingdom.github.io/archives/" target="_blank">博客列表</a>
    <h1 id="five">focus伪类选择器</h1>
    <input type="text">
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>2020-11-05</title>
    <url>/2020/11/05/2020-11-05/</url>
    <content><![CDATA[<h3 id="1-关闭Navicat程序。"><a href="#1-关闭Navicat程序。" class="headerlink" title="1:关闭Navicat程序。"></a>1:关闭Navicat程序。</h3><h3 id="2-键盘按键win-R，输入regedit调出Windows系统注册表。"><a href="#2-键盘按键win-R，输入regedit调出Windows系统注册表。" class="headerlink" title="2:键盘按键win+R，输入regedit调出Windows系统注册表。"></a>2:键盘按键win+R，输入regedit调出Windows系统注册表。</h3><h3 id="3-删除HKEY-CURRENT-USER-SOFTWARE-PremiumSoft-Data："><a href="#3-删除HKEY-CURRENT-USER-SOFTWARE-PremiumSoft-Data：" class="headerlink" title="3:删除HKEY_CURRENT_USER\SOFTWARE\PremiumSoft\Data："></a>3:删除HKEY_CURRENT_USER\SOFTWARE\PremiumSoft\Data：</h3><img src="/2020/11/05/2020-11-05/2020-11-05-1.png" class title="aa">
<h3 id="4-展开HKEY-CURRENT-USER-SOFTWARE-Classes-CLSID，然后展开每一个子文件夹查看，如果里面只包含一个名为Info的文件夹，就删掉它："><a href="#4-展开HKEY-CURRENT-USER-SOFTWARE-Classes-CLSID，然后展开每一个子文件夹查看，如果里面只包含一个名为Info的文件夹，就删掉它：" class="headerlink" title="4:展开HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID，然后展开每一个子文件夹查看，如果里面只包含一个名为Info的文件夹，就删掉它："></a>4:展开HKEY_CURRENT_USER\SOFTWARE\Classes\CLSID，然后展开每一个子文件夹查看，如果里面只包含一个名为Info的文件夹，就删掉它：</h3><img src="/2020/11/05/2020-11-05/2020-11-05-2.png" class title="bb">
]]></content>
      <tags>
        <tag>navicat</tag>
      </tags>
  </entry>
  <entry>
    <title>2021-01-22随便感想</title>
    <url>/2021/01/22/2021-01-22%E9%9A%8F%E4%BE%BF%E6%84%9F%E6%83%B3/</url>
    <content><![CDATA[<p>2020-01-22随便感想</p>
<p>中国有1.5亿学生，将近1000万老师。大概15个学生拥有一个老师。</p>
<p>然而这么多的老师的水平参差不齐，城市与农村、东部与西部之间的教育水平差距特大。如果我们将前1%100之一的优秀教师集中起来出网课，给所有学生一起上课，这样可以缩小我国的教育水平差距。</p>
<p>创建一个免费的学习网站，让各行各业优秀的人在上面传授他们的知识，这样就不需要那么多的老师，可以让更多的人去做其他的事情，也可以让更多的人享受到更为优质的教育。我们只需要拿出我们教育经费的一小部分来给这些优秀的老师发工资，同时我们可以鼓励大家分享自己的知识，创作学习视频。这样可以让全民终身免费的学习，让人们不在苦于学历而没有机会学习。</p>
<p>重点在于打造一个学习社区，让大家愿意分享自己所学的知识，同时，让他们分享知识的同时，能够获取利益，可以是金钱的利益，也可以其他形式的利益。</p>
<p>这个网站有三点意义。</p>
<p>1—促进教育公平</p>
<p>2—降低教育成本</p>
<p>3—让人们获得更优质的教育</p>
]]></content>
  </entry>
  <entry>
    <title>Ajax</title>
    <url>/2020/11/19/Ajax/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ajax</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>

    <script type="text/javascript">
        window.onload = function f() {
            var myDate = new Date();
            document.getElementById('currentTime').innerText = myDate.getTime();
        }

        function loadPage() {
            var targetURL = document.getElementById('url').value;
            console.log(targetURL);
            document.getElementById('iframePosition').src = targetURL;
        }
    </script>
    <div>
        <p>请输入要加载的地址：<span id="currentTime"></span></p>
        <p>
            <input type="text" id="url" value="vue.html">
            <input type="button" value="提交" onclick="loadPage()">
        </p>
    </div>

    <div>
        <h3>加载页面的位置：</h3>
        <iframe style="width: 100%; height: 500px;" id="iframePosition"></iframe>
    </div>
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>CRUD测试</title>
    <url>/2020/11/15/CRUD%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="CRUD测试"><a href="#CRUD测试" class="headerlink" title="CRUD测试"></a>CRUD测试</h1><h2 id="pojo—-gt-mapper—-gt-service—-gt-controller"><a href="#pojo—-gt-mapper—-gt-service—-gt-controller" class="headerlink" title="==pojo—&gt;mapper—&gt;service—&gt;controller=="></a>==pojo—&gt;mapper—&gt;service—&gt;controller==</h2><h3 id="1—导入xml依赖"><a href="#1—导入xml依赖" class="headerlink" title="##1—导入xml依赖"></a>##1—导入xml依赖</h3><h3 id="2—写config"><a href="#2—写config" class="headerlink" title="2—写config"></a>2—写config</h3><p>3—配置.yml连接数据库</p>
<p>4—编写model(bean)</p>
<p>5—编写mapper接口，提供CRUE接口，通过注解写sql语句。</p>
<p>6—编写service接口</p>
<p>7—编写service实现代码</p>
<p>8—编写controller</p>
<p>9—编写前端页面，将数据传到前端</p>
]]></content>
  </entry>
  <entry>
    <title>2021-01-24</title>
    <url>/2021/01/24/2021-01-24/</url>
    <content><![CDATA[<p>回想高中刚毕业那一瞬间，我当时都不知道自己想要的是什么，我没有梦想，我有点像一副空躯壳。正如我当时写信给远方的陌生人，讲述自己求职失败的经历和高考后的失落。</p>
<p>从某种意义上来说，确实是高考改变了我的人生轨迹，当时的我并没有想到大学对我来说意味着什么。在哥哥地鼓励下，我取得了不错的成绩。不可否认的是，那时的我并没有想到自己的将来是什么样子的。与初中满怀希望和憧憬迈进高中的我不一样的是，高考完我整个人一片空虚，高中三年确实有点压抑，我不知道我人生的路该往何方。我填了一个陌生而又熟悉的城市的大学志愿。</p>
<p>我以前从未听说过这所学校，直到我填高考志愿时，除了它的往届录取分数线外，我对它仍然一无所知。但我还是来了，正如我当时的想法一样，我应该去到这座中国最大的城市来看看。我一个人背着一个包来了。</p>
<p>生活了三年多之后，我依然对这座城市感到陌生，我仿佛一个匆匆过客，悄悄的来了，然后悄无声息的走了。我不知道我的未来应该如何，大学毕业后又是一个未知的新世界。刚入大学，老师对我们说，经过大学四年之后，人与人之间会有巨大的差距，有些人一顿饭钱可能会是另一些人一个月的工资，所以我们应该努力学习，取得良好的成绩，不要虚度大学时光。</p>
<p>到了今天，我仿佛明白了这句话的另一层含义，大学四年之后，人与人之间的差距仿佛确实有天大的区别。社会中存在种种壁垒，各种无形的墙阻拦着人。到了实习的公司，总经理助理和我们说，无论遇到什么事情，第一件事情是学会请示，因为领导和员工掌握的信息是不对等的。</p>
<p>随着互联网的飞速发展，社会上信息的不对等得到了极大的改善。但是，信息的不对称依旧存在，这正是各种墙存在的原因。很多人也只能局限于自己思维的一隅，跟着自己身边的人随波逐流。从我自己的角度出发，我也是随波逐流的一员。</p>
<p>人生应该随波逐流吗？不。人应该有坚定的梦想。我应该相信自己，相信自己能去完成自己的伟大梦想。为自己的梦想去努力的奋斗。这正是我大学的宝贵财富，我找到了自己梦想。</p>
]]></content>
  </entry>
  <entry>
    <title>Echarts步骤</title>
    <url>/2020/12/09/Echarts%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<p>Echarts步骤</p>
<p>1—导入echarts.js文件</p>
<p>2—准备一个呈现图标的盒子</p>
<p>3—初始化echarts示例对象</p>
<p>4—准备配置项</p>
<p>5—将配置项设置给echarts实例对象</p>
]]></content>
  </entry>
  <entry>
    <title>Java</title>
    <url>/2020/07/04/Java/</url>
    <content><![CDATA[<h4 id="Java后端开发学习路线"><a href="#Java后端开发学习路线" class="headerlink" title="Java后端开发学习路线"></a>Java后端开发学习路线</h4><img src="/2020/07/04/Java/Java%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" class title="Java">
<h4 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a><u>引用数据类型</u></h4><p>数据类型    变量名 = new    数据类型();</p>
<p>Scanner    sc = new Scanner();    //键盘输入</p>
<h4 id="ArrayList类"><a href="#ArrayList类" class="headerlink" title="ArrayList类"></a><u>ArrayList</u>类</h4><p>ArrayList&lt;数据类型&gt;    变量名 = new ArrayLsit&lt;数据类型&gt;();</p>
<p>ArrayList list = new ArrayList();</p>
<p>list.add();        //放入元素。</p>
<h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a><u>异常</u></h4><p>程序执行过程中出现非正常的情况导致JVM的非正常停止。</p>
<p>Throwable    超类</p>
<p>Error    严重错误</p>
<p>Exception    编译器异常</p>
<p>RuntimeException    运行期异常</p>
<h5 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h5><p>throw new 异常类名(参数);</p>
<h5 id="声明异常"><a href="#声明异常" class="headerlink" title="声明异常"></a>声明异常</h5><p>修饰符    返回值类型    方法名(参数)    throws    异常类名1，异常类名2{</p>
<p>}</p>
<h5 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h5><p>try{</p>
<p>//可能会出现异常的代码</p>
<p>}    catch(异常类型 参数名称){</p>
<p>//处理出现的异常</p>
<p>}</p>
<h3 id="IO"><a href="#IO" class="headerlink" title="IO"></a><u>IO</u></h3><h4 id="字节流Stream"><a href="#字节流Stream" class="headerlink" title="字节流Stream"></a>字节流Stream</h4><h5 id="InputStream"><a href="#InputStream" class="headerlink" title="InputStream"></a>InputStream</h5><h6 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h6><h5 id="OutputStream"><a href="#OutputStream" class="headerlink" title="OutputStream"></a>OutputStream</h5><h6 id="FileInputSteam"><a href="#FileInputSteam" class="headerlink" title="FileInputSteam"></a>FileInputSteam</h6><h4 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h4><h5 id="Writer"><a href="#Writer" class="headerlink" title="Writer"></a>Writer</h5><h5 id="Reader"><a href="#Reader" class="headerlink" title="Reader"></a>Reader</h5>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>数值分析:L，U分解与计算方法</title>
    <url>/2020/05/20/L,U%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h2 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h2><script type="math/tex; mode=display">
A=\left[
\matrix{
  2&2&3\\
  4&7&7\\
  -2&4&5
}
\right]
\left[
\matrix{
x_1\\
x_2\\
x_3
}
\right]
=
\left[
\matrix{
3\\
1\\
-7
}
\right]</script><hr>
<h2 id="第一步：分解L和U"><a href="#第一步：分解L和U" class="headerlink" title="第一步：分解L和U"></a>第一步：分解L和U</h2><script type="math/tex; mode=display">
Ax=b\quad\Rightarrow\quad(LU)x=b\quad\Rightarrow L(Ux)=b\\
\Rightarrow\{\matrix{
Ly=b\\
Ux=y}</script><hr>
<h2 id="第二步：解出L和U"><a href="#第二步：解出L和U" class="headerlink" title="第二步：解出L和U"></a>第二步：解出L和U</h2><script type="math/tex; mode=display">
\begin{align}
\left[
\matrix{
  2&2&3\\
  4&7&7\\
  -2&4&5
}
\right]
\\
U_{21}=2\times(-2)+4&=0\\
U_{22}=2\times(-2)+7&=3\\
U_{22}=3\times(-2)+7&=1\\\quad 
U_{31}=2\times(1)+(-2)&=0\\
U_{32}=2\times(1)+4&=6\\
U_{33}=3\times(1)+5&=8\\
\Downarrow\\
\left[
\matrix{
2&2&3\\
0&3&1\\
0&6&8
}
\right]
\\
\underline{U_{32}}=3\times(-2)+6&=0\\
\underline{U_{33}}=1\times(-2)+8&=6\\
\Downarrow\\
\left[
\matrix{
2&2&3\\
0&3&1\\
0&0&6
}
\right]&=U\\
-------------&------------\\
L_{21}=\frac{4}{2}&=2\\\quad 
L_{31}=\frac{-2}{2}&=-1\\
L_{32}=\frac{6}{3}&=2
\\\Downarrow \\
L&=
\left[
\matrix{  
1&0&0\\  
2&1&0\\
-1&2&1
}
\right]
\end{align}</script><hr>
<h2 id="第三步：解出y和x"><a href="#第三步：解出y和x" class="headerlink" title="第三步：解出y和x"></a>第三步：解出y和x</h2><script type="math/tex; mode=display">
\begin{align}
根据
&\{\matrix{
Ly=b\\
Ux=y}\\

Ly=
\left[
\matrix{  
1&0&0\\  
2&1&0\\
-1&2&1
}
\right]
\left[
\matrix{  
y_1\\
y_2\\
y_3
}
\right]
&=
\left[
\matrix{  
3\\
1\\
-7
}
\right]\\
\Downarrow\\

y_1&=3\\
2y_1+y_2&=1\\
-y_1+2y_2+y_3&=-7
\\
\Downarrow\\

y_1&=3\\
y_2&=-5\\
y_3&=6\\
----------&----------
\\
Ux=
\left[
\matrix{
2&2&3\\
0&3&1\\
0&0&6
}
\right]
\left[
\matrix{
x_1\\
x_2\\
x_3
}\right]
&=
\left[
\matrix{
3\\
-5\\
6
}\right]
\\\Downarrow\\
2x_1+2x_2+3x_3&=3\\
3x_2+x_3&=-5\\
6x_3&=6
\\\Downarrow\\
x_1&=2\\
x_2&=-2\\
x_3&=1
\\\Downarrow\\
x&=
\left[
\matrix{
2\\
-2\\
1
}\right]

\end{align}</script><hr>
<center>
<font color="blue" size="4">
    衣带渐宽终不悔，为伊消得人憔悴。
</font>
</center>






]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>数值分析</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC操作</title>
    <url>/2020/11/12/JDBC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="JDBC操作"><a href="#JDBC操作" class="headerlink" title="JDBC操作"></a>JDBC操作</h1><h2 id="JDBC编程步骤"><a href="#JDBC编程步骤" class="headerlink" title="JDBC编程步骤"></a>JDBC编程步骤</h2><p>1、加载驱动</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(driverClass)</span><br><span class="line"><span class="comment">//加载MySql驱动</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>)</span><br></pre></td></tr></table></figure>
<p>2、获得数据库连接：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DriverManager.getConnection(<span class="string">"jdbc:mysql://127.0.0.1:3306/imooc"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br></pre></td></tr></table></figure>
<p>3、创建Statement\PreparedStatement对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">conn.createStatement();</span><br><span class="line">conn.prepareStatement(sql);</span><br></pre></td></tr></table></figure>
<h5 id="完整实例"><a href="#完整实例" class="headerlink" title="完整实例"></a>完整实例</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/imooc"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"liulx"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD = <span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.加载驱动程序</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//2. 获得数据库连接</span></span><br><span class="line">        Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);</span><br><span class="line">        <span class="comment">//3.操作数据库，实现增删改查</span></span><br><span class="line">        Statement stmt = conn.createStatement();</span><br><span class="line">        ResultSet rs = stmt.executeQuery(<span class="string">"SELECT user_name, age FROM imooc_goddess"</span>);</span><br><span class="line">        <span class="comment">//如果有数据，rs.next()返回true</span></span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            System.out.println(rs.getString(<span class="string">"user_name"</span>)+<span class="string">" 年龄："</span>+rs.getInt(<span class="string">"age"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/imooc"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"liulx"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD = <span class="string">"123456"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载驱动程序</span></span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">            <span class="comment">//2. 获得数据库连接</span></span><br><span class="line">            conn = DriverManager.getConnection(URL, USER, PASSWORD);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模型</span></span><br><span class="line"><span class="keyword">package</span> liulx.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goddess</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String user_name;</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Date birthday; <span class="comment">//注意用的是java.util.Date</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="keyword">private</span> String create_user;</span><br><span class="line">    <span class="keyword">private</span> String update_user;</span><br><span class="line">    <span class="keyword">private</span> Date create_date;</span><br><span class="line">    <span class="keyword">private</span> Date update_date;</span><br><span class="line">    <span class="keyword">private</span> Integer isDel;</span><br><span class="line">    <span class="comment">//getter setter方法。。。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//---------dao层--------------</span></span><br><span class="line"><span class="keyword">package</span> liulx.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> liulx.db.DbUtil;</span><br><span class="line"><span class="keyword">import</span> liulx.model.Goddess;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoddessDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//增加</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addGoddess</span><span class="params">(Goddess g)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection conn = DbUtil.getConnection();</span><br><span class="line">        <span class="comment">//sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO imooc_goddess(user_name, sex, age, birthday, email, mobile,"</span>+</span><br><span class="line">            <span class="string">"create_user, create_date, update_user, update_date, isdel)"</span></span><br><span class="line">                +<span class="string">"values("</span>+<span class="string">"?,?,?,?,?,?,?,CURRENT_DATE(),?,CURRENT_DATE(),?)"</span>;</span><br><span class="line">        <span class="comment">//预编译</span></span><br><span class="line">        PreparedStatement ptmt = conn.prepareStatement(sql); <span class="comment">//预编译SQL，减少sql执行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//传参</span></span><br><span class="line">        ptmt.setString(<span class="number">1</span>, g.getUser_name());</span><br><span class="line">        ptmt.setInt(<span class="number">2</span>, g.getSex());</span><br><span class="line">        ptmt.setInt(<span class="number">3</span>, g.getAge());</span><br><span class="line">        ptmt.setDate(<span class="number">4</span>, <span class="keyword">new</span> Date(g.getBirthday().getTime()));</span><br><span class="line">        ptmt.setString(<span class="number">5</span>, g.getEmail());</span><br><span class="line">        ptmt.setString(<span class="number">6</span>, g.getMobile());</span><br><span class="line">        ptmt.setString(<span class="number">7</span>, g.getCreate_user());</span><br><span class="line">        ptmt.setString(<span class="number">8</span>, g.getUpdate_user());</span><br><span class="line">        ptmt.setInt(<span class="number">9</span>, g.getIsDel());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        ptmt.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateGoddess</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection conn = DbUtil.getConnection();</span><br><span class="line">        <span class="comment">//sql, 每行加空格</span></span><br><span class="line">        String sql = <span class="string">"UPDATE imooc_goddess"</span> +</span><br><span class="line">                <span class="string">" set user_name=?, sex=?, age=?, birthday=?, email=?, mobile=?,"</span>+</span><br><span class="line">                <span class="string">" update_user=?, update_date=CURRENT_DATE(), isdel=? "</span>+</span><br><span class="line">                <span class="string">" where id=?"</span>;</span><br><span class="line">        <span class="comment">//预编译</span></span><br><span class="line">        PreparedStatement ptmt = conn.prepareStatement(sql); <span class="comment">//预编译SQL，减少sql执行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//传参</span></span><br><span class="line">        ptmt.setString(<span class="number">1</span>, g.getUser_name());</span><br><span class="line">        ptmt.setInt(<span class="number">2</span>, g.getSex());</span><br><span class="line">        ptmt.setInt(<span class="number">3</span>, g.getAge());</span><br><span class="line">        ptmt.setDate(<span class="number">4</span>, <span class="keyword">new</span> Date(g.getBirthday().getTime()));</span><br><span class="line">        ptmt.setString(<span class="number">5</span>, g.getEmail());</span><br><span class="line">        ptmt.setString(<span class="number">6</span>, g.getMobile());</span><br><span class="line">        ptmt.setString(<span class="number">7</span>, g.getUpdate_user());</span><br><span class="line">        ptmt.setInt(<span class="number">8</span>, g.getIsDel());</span><br><span class="line">        ptmt.setInt(<span class="number">9</span>, g.getId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        ptmt.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delGoddess</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection conn = DbUtil.getConnection();</span><br><span class="line">        <span class="comment">//sql, 每行加空格</span></span><br><span class="line">        String sql = <span class="string">"delete from imooc_goddess where id=?"</span>;</span><br><span class="line">        <span class="comment">//预编译SQL，减少sql执行</span></span><br><span class="line">        PreparedStatement ptmt = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//传参</span></span><br><span class="line">        ptmt.setInt(<span class="number">1</span>, id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        ptmt.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Goddess&gt; <span class="title">query</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection conn = DbUtil.getConnection();</span><br><span class="line">        Statement stmt = conn.createStatement();</span><br><span class="line">        ResultSet rs = stmt.executeQuery(<span class="string">"SELECT user_name, age FROM imooc_goddess"</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Goddess&gt; gs = <span class="keyword">new</span> ArrayList&lt;Goddess&gt;();</span><br><span class="line">        Goddess g = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            g = <span class="keyword">new</span> Goddess();</span><br><span class="line">            g.setUser_name(rs.getString(<span class="string">"user_name"</span>));</span><br><span class="line">            g.setAge(rs.getInt(<span class="string">"age"</span>));</span><br><span class="line"></span><br><span class="line">            gs.add(g);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Goddess <span class="title">get</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Goddess g = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection conn = DbUtil.getConnection();</span><br><span class="line">        <span class="comment">//sql, 每行加空格</span></span><br><span class="line">        String sql = <span class="string">"select * from  imooc_goddess where id=?"</span>;</span><br><span class="line">        <span class="comment">//预编译SQL，减少sql执行</span></span><br><span class="line">        PreparedStatement ptmt = conn.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//传参</span></span><br><span class="line">        ptmt.setInt(<span class="number">1</span>, id);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        ResultSet rs = ptmt.executeQuery();</span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            g = <span class="keyword">new</span> Goddess();</span><br><span class="line">            g.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line">            g.setUser_name(rs.getString(<span class="string">"user_name"</span>));</span><br><span class="line">            g.setAge(rs.getInt(<span class="string">"age"</span>));</span><br><span class="line">            g.setSex(rs.getInt(<span class="string">"sex"</span>));</span><br><span class="line">            g.setBirthday(rs.getDate(<span class="string">"birthday"</span>));</span><br><span class="line">            g.setEmail(rs.getString(<span class="string">"email"</span>));</span><br><span class="line">            g.setMobile(rs.getString(<span class="string">"mobile"</span>));</span><br><span class="line">            g.setCreate_date(rs.getDate(<span class="string">"create_date"</span>));</span><br><span class="line">            g.setCreate_user(rs.getString(<span class="string">"create_user"</span>));</span><br><span class="line">            g.setUpdate_date(rs.getDate(<span class="string">"update_date"</span>));</span><br><span class="line">            g.setUpdate_user(rs.getString(<span class="string">"update_user"</span>));</span><br><span class="line">            g.setIsDel(rs.getInt(<span class="string">"isdel"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> g;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2021/03/08/Linux/</url>
    <content><![CDATA[<h2 id="Linux（一切皆文件）"><a href="#Linux（一切皆文件）" class="headerlink" title="Linux（一切皆文件）"></a>Linux（一切皆文件）</h2><p>xshell（远程连接工具）</p>
<p>xftp（文件上传工具）</p>
<h2 id="linux基本命令（命令可以组合使用）"><a href="#linux基本命令（命令可以组合使用）" class="headerlink" title="linux基本命令（命令可以组合使用）"></a>linux基本命令（命令可以组合使用）</h2><p>sync # 将数据从内存同步到硬盘</p>
<p>shutdown #关机</p>
<p>reboot       #重启</p>
<p>halt            # 关闭系统</p>
<p>ls                # 查看当前目录</p>
<p>ls -a           #查看所有目录，包括隐藏目录</p>
<p>ls -l           #查看所有文件，包含文件的属性和权限，不包括隐藏文件</p>
<p>cd               # 切换目录</p>
<p>cd..             # 返回上一级目录</p>
<p>cd~             #回到当前用户目录</p>
<p>pwd            #显示当前用户所在的目录</p>
<p>mkdir         #创建目录</p>
<p>mkdir -p    #创建多级目录</p>
<p>rmdir         #删除目录</p>
<p>rmdir -p     #删除多级目录</p>
<p>rm               #删除文件</p>
<p>rm -f            #忽略不存在的文件，强制删除</p>
<p>rm -r            #递归删除目录</p>
<p>rm -i            #互动，询问是否删除</p>
<p>rm -rf /       #删除系统中所有的文件</p>
<p>cp                #复制文件或者目录</p>
<p>mv              #移动文件或者目录</p>
<p>mv -f         #强制</p>
<p>mv -u        #只更换已经更新过的文件</p>
<p>chgrp         #更改文件属组</p>
<p>chown        #更改文件属主，也可同时更改文件属组</p>
<p>==chmod        #更改文件9个属性==</p>
<p>r=4    w=2    x=1</p>
<p>ln                 #创建硬链接</p>
<p>ln -s            #创建软链接</p>
<p>touch          #创建文件</p>
<p>echo            #输入字符串</p>
<h2 id="查看文件中的内容的命令"><a href="#查看文件中的内容的命令" class="headerlink" title="查看文件中的内容的命令"></a>查看文件中的内容的命令</h2><p>cat    由第一行开始显示文件内容</p>
<p>tac    从最后一行开始显示</p>
<p>nl    显示的时候，顺道输出行号</p>
<p>more    一页一页的显示文件内容</p>
<p>less    与more类似，可以往前翻页</p>
<p>head    只看头几行</p>
<p>tail    只看尾部几行</p>
<h2 id="主要文件的功能"><a href="#主要文件的功能" class="headerlink" title="主要文件的功能"></a>主要文件的功能</h2><p><img src="/2021/03/08/Linux/image-20210308102439953.png" alt="image-20210308102439953"></p>
<p><img src="/2021/03/08/Linux/image-20210308102807265.png" alt="image-20210308102807265"></p>
<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h5 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h5><p>i    切换到输入模式</p>
<p>x    删除当前光标所在处的字符</p>
<p>:    切换到底线命令模式，以在最底一行输入命令。（如果在输入模式，需要按esc退出）</p>
<h5 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h5><h5 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h5><p>w    保存文件</p>
<p>q    退出程序</p>
<p>:set nu    显示行号</p>
<p>:set nonu    取消行号</p>
<p>/word        word=要搜索的字符</p>
<p>u            撤销</p>
<h2 id="linux用户管理"><a href="#linux用户管理" class="headerlink" title="linux用户管理"></a>linux用户管理</h2><p>useradd        添加用户</p>
<p>useradd -m        自动添加主目录</p>
<p>userdel        删除用户</p>
<p>userdel -r        删除用户的时候将目录一并删掉</p>
<p>usermod        修改用户</p>
<h2 id="linux用户组管理"><a href="#linux用户组管理" class="headerlink" title="linux用户组管理"></a>linux用户组管理</h2><p>groupadd        添加用户组</p>
<p>groupadd -g    添加用户组并指定端口号</p>
<p>groupdel        删除用户组</p>
<p>groupmod        修改用户组</p>
<h2 id="linux磁盘管理"><a href="#linux磁盘管理" class="headerlink" title="linux磁盘管理"></a>linux磁盘管理</h2><p>df                 列出文件系统整体的磁盘使用量</p>
<p>du                检查磁盘空间使用量</p>
<p>mount         挂载</p>
<p>umount       卸载</p>
<h2 id="linux进程管理"><a href="#linux进程管理" class="headerlink" title="linux进程管理"></a>linux进程管理</h2><p>ps                查看当前系统中正在执行的各种进程的信息</p>
<p>ps -a            显示当前终端运行的所有的进程信息</p>
<p>ps -u            以用户的信息显示进程</p>
<p>ps -x            显示后台运行进程的参数</p>
<p>grep             查找文件中符合条件的字符串</p>
<p>|                    管道符</p>
<p>ps -aux|grep    mysql        查看所有与mysql相关的进程</p>
<p>ps -ef            查看父进程的信息</p>
<p>pstree -pu    显示父id和显示用户组</p>
<h2 id="环境安装-rpm，解压缩，yum在线安装"><a href="#环境安装-rpm，解压缩，yum在线安装" class="headerlink" title="环境安装(rpm，解压缩，yum在线安装)"></a>环境安装(rpm，解压缩，yum在线安装)</h2><p>1—安装jdk</p>
<p>2—安装java环境</p>
<p>java -version                      检查当前系统是否存在java环境</p>
<p>rpm -e —nodeps  jdk_        强制卸载jdk</p>
<p>rpm -ivh jdk文件名            安装jdk</p>
<p>rpm -qa|grep jdk                检测jdk版本信息</p>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>vim /etc/profile</p>
<p>JAVA_HOME=/user/java/jdk1.8….-amd64</p>
<p>CLASSPATH=%JAVA_HOME%/lib;%JAVA_HOME%/jre/lib</p>
<p>PATH=$JAVA_HOME/bin;$JAVA_HOME/jre/bin</p>
<p>export PATH CLASSPTH JAVA_HOME</p>
<p><img src="/2021/03/08/Linux/image-20210308155412819.png" alt="image-20210308155412819"></p>
<p><img src="/2021/03/08/Linux/image-20210308160435266.png" alt="image-20210308160435266"></p>
<h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p><img src="/2021/03/08/Linux/image-20210308160228815.png" alt="image-20210308160228815"></p>
<h2 id="tomcat安装"><a href="#tomcat安装" class="headerlink" title="tomcat安装"></a>tomcat安装</h2><p>tar    -zxvf    apache-tomcat…..            解压</p>
<p>./xxx.sh                                                     测试tomcat</p>
<p>./startup.sh                                执行</p>
<p>./shutdown.sh                            停止</p>
<h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p><img src="/2021/03/08/Linux/image-20210308164228630.png" alt="image-20210308164228630"></p>
]]></content>
  </entry>
  <entry>
    <title>POI</title>
    <url>/2021/01/26/POI/</url>
    <content><![CDATA[<p>POI</p>
]]></content>
  </entry>
  <entry>
    <title>English grammar</title>
    <url>/2020/05/22/English/</url>
    <content><![CDATA[<h1 id="be"><a href="#be" class="headerlink" title="==be=="></a>==be==</h1><p><strong>I am happy today.</strong> </p>
<p><strong>Are we late?</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>Be：现在时（present）</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>I am</td>
<td>you are</td>
<td>he/she/it is</td>
<td>we are</td>
<td>they are</td>
</tr>
<tr>
<td>?</td>
<td>am I?</td>
<td>are you</td>
<td>is he/she/it?</td>
<td>are we?</td>
<td>are they?</td>
</tr>
<tr>
<td>-</td>
<td>I am not</td>
<td>you are not</td>
<td>he/she/it is not</td>
<td>we are not</td>
<td>they are not</td>
</tr>
</tbody>
</table>
</div>
<p>I am a doctor.</p>
<p>We are not ready.</p>
<hr>
<p><strong>Where were you?</strong></p>
<p><strong>I was in China.</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>Be：过去时（Past）</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>I was</td>
<td>you were</td>
<td>he/she/it was</td>
<td>we were</td>
<td>they were</td>
</tr>
<tr>
<td>?</td>
<td>was I?</td>
<td>were you</td>
<td>was he/she/it?</td>
<td>were we?</td>
<td>were they?</td>
</tr>
<tr>
<td>-</td>
<td>I was not</td>
<td>you were not</td>
<td>he/she/it was not</td>
<td>we were not</td>
<td>they were not</td>
</tr>
</tbody>
</table>
</div>
<p>Where were you yesterday?</p>
<p>My mother was a singer.</p>
<p>I was not well last week.</p>
<hr>
<p><strong>The bus will be full.</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>Be：将来时（future）</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>I/you/she/he/it/we/they/  <strong>will be</strong></td>
</tr>
<tr>
<td>?</td>
<td><strong>will</strong>  I/you/she…etc <strong>be</strong></td>
</tr>
<tr>
<td>-</td>
<td>I/you/he…etc <strong>will not be</strong></td>
</tr>
</tbody>
</table>
</div>
<p>It will be cold this evening.</p>
<p>I’ll be at home all day tomorrow.</p>
<p>Where will we be ten years from now?</p>
<p>The exam won’t be diffcult.</p>
<hr>
<p><strong>There is a dog in the garden.</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>现在时present</th>
<th>过去时past</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>there is                there are</td>
<td>there was                      there were</td>
</tr>
<tr>
<td>?</td>
<td>is there?              are there?</td>
<td>was there?                    were there?</td>
</tr>
<tr>
<td>-</td>
<td>there is not         there are not</td>
<td>there was not               there were not</td>
</tr>
</tbody>
</table>
</div>
<p>There are some letters for you.</p>
<p>Is there any milk in the fridge?</p>
<p>There is not much coffee.</p>
<p>Were there any phone calls?</p>
<p>Where was a good film last night.</p>
<hr>
<center><font color="buff" size="5" face="微软雅黑">
    <i>
    To be or not to be, that is the question.
    </i>
</font></center>]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>grammar</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaEE</title>
    <url>/2021/04/16/JavaEE/</url>
    <content><![CDATA[<h2 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h2><p>html<img src="/2021/04/16/JavaEE/image-20210416163725711.png" alt="image-20210416163725711"></p>
<p><img src="/2021/04/16/JavaEE/image-20210416163927652.png" alt="image-20210416163927652"></p>
<p>javascript</p>
<p>servlet</p>
<p>jsp</p>
<p>会话管理</p>
<p>javaBean</p>
<p>mysql,jdbc,EJB</p>
<p>ajax</p>
<p>struts,hibernate</p>
]]></content>
  </entry>
  <entry>
    <title>Lambda</title>
    <url>/2021/06/30/Lambda/</url>
    <content><![CDATA[<h1 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h1><h2 id="Functional-Interface-函数式接口"><a href="#Functional-Interface-函数式接口" class="headerlink" title="Functional Interface(函数式接口)"></a>Functional Interface(函数式接口)</h2><p>只包含一个抽象方法</p>
<p>通过lambda表达式来创建该接口的对象</p>
]]></content>
  </entry>
  <entry>
    <title>SSM</title>
    <url>/2020/06/14/SSM/</url>
    <content><![CDATA[<h1 id="ideaMaven设置"><a href="#ideaMaven设置" class="headerlink" title="ideaMaven设置"></a>ideaMaven设置</h1><img src="/2020/06/14/SSM/ideaMaven.jpg" class title="ideaMaven配置">
<hr>
<h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><img src="/2020/06/14/SSM/spring_mvc%E5%9B%BE.jpg" class title="mvc图">
<hr>
<h1 id="SSM架构图"><a href="#SSM架构图" class="headerlink" title="SSM架构图"></a>SSM架构图</h1><img src="/2020/06/14/SSM/SSM%E6%9E%B6%E6%9E%84%E5%9B%BE.png" class title="SSM图">
<hr>
<h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h3 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h3><p>表现层：展示数据</p>
<p>业务层：处理逻辑</p>
<p>持久层：数据库交互</p>
<h2 id="持久层技术"><a href="#持久层技术" class="headerlink" title="==持久层技术=="></a>==<strong>持久层技术</strong>==</h2><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><p>Connection</p>
<p>PreparedStatement</p>
<p>ResultSet</p>
<h2 id="SpringJdbcTemplate"><a href="#SpringJdbcTemplate" class="headerlink" title="SpringJdbcTemplate"></a>SpringJdbcTemplate</h2><p>jdbc封装。</p>
<p>ORM:(Object Relational Mapping)</p>
<p>对象关系映射：数据库表——&gt;实体类</p>
<center><font color="line" size="6" face="STCAIYUN">
    夔府孤城落日斜，每依北斗望京华。
</font></center>



]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>软件架构</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringSecurity参考手册</title>
    <url>/2021/07/10/SpringSecurity%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="SpringSecurity参考手册"><a href="#SpringSecurity参考手册" class="headerlink" title="SpringSecurity参考手册"></a>SpringSecurity参考手册</h1><p>强大和高度可定制的身份验证和访问控制框架，基于Spring标准。</p>
]]></content>
  </entry>
  <entry>
    <title>Servlet</title>
    <url>/2021/06/28/Servlet/</url>
    <content><![CDATA[<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><p>web服务器接收到http请求时，分别创建一个HttpServletRequest和HttpServletResponse对象。</p>
<h4 id="HttpServletResponse（响应客户端信息）"><a href="#HttpServletResponse（响应客户端信息）" class="headerlink" title="HttpServletResponse（响应客户端信息）"></a>HttpServletResponse（响应客户端信息）</h4><p>1-发送数据的方法</p>
<p>2-  发送响应头的方法</p>
<h5 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h5><p>1、获取下载文件路径</p>
<p>2、获取下载文件名</p>
<p>3、使浏览器支持下载</p>
<p>4、获取下载文件的输入流</p>
<p>5、创建缓冲区</p>
<p>6、获取OutPutStream对象</p>
<p>7、将FileOutputStream流写入到buffer缓冲区</p>
<p>8、使用OutputStream将缓冲区的数据输出到客户端。</p>
<h4 id="HttpServletRequest（获取客户端请求的参数）"><a href="#HttpServletRequest（获取客户端请求的参数）" class="headerlink" title="HttpServletRequest（获取客户端请求的参数）"></a>HttpServletRequest（获取客户端请求的参数）</h4>]]></content>
  </entry>
  <entry>
    <title>SSM项目搭建</title>
    <url>/2020/11/11/SSM%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="SSM项目搭建过程"><a href="#SSM项目搭建过程" class="headerlink" title="SSM项目搭建过程"></a>SSM项目搭建过程</h1><h4 id="1-选择maven项目"><a href="#1-选择maven项目" class="headerlink" title="1-选择maven项目"></a>1-选择maven项目</h4><h4 id="2-选择maven的安装路径"><a href="#2-选择maven的安装路径" class="headerlink" title="2-选择maven的安装路径"></a>2-选择maven的安装路径</h4><p>Properties属性添加name:    archetypeCatalog,    value:    internal</p>
<h4 id="3-在pom-xml文件中添加Spring相关依赖"><a href="#3-在pom-xml文件中添加Spring相关依赖" class="headerlink" title="3-在pom.xml文件中添加Spring相关依赖"></a>3-在pom.xml文件中添加Spring相关依赖</h4><p>1—创建applicationContext.xml配置文件</p>
<p>2—配置web.xml配置文件</p>
<p>3—添加Test测试类</p>
<h4 id="4-bean类-实体类，对应数据库数据"><a href="#4-bean类-实体类，对应数据库数据" class="headerlink" title="4-bean类   实体类，对应数据库数据"></a>4-bean类   实体类，对应数据库数据</h4><h4 id="5-dao类-数据接口，提供CRUD操作的接口"><a href="#5-dao类-数据接口，提供CRUD操作的接口" class="headerlink" title="5-dao类    数据接口，提供CRUD操作的接口"></a>5-dao类    数据接口，提供CRUD操作的接口</h4><h4 id="6-server类-服务层，提供服务层接口"><a href="#6-server类-服务层，提供服务层接口" class="headerlink" title="6-server类 服务层，提供服务层接口"></a>6-server类 服务层，提供服务层接口</h4><p>服务层实现类ServiceImpl，注入dao接口，实现具体的方法，并且调用dao接口中的方法</p>
<h4 id="7-controller类-，注入服务层接口，添加映射路径，在方法上添加映射路径"><a href="#7-controller类-，注入服务层接口，添加映射路径，在方法上添加映射路径" class="headerlink" title="7-controller类 ，注入服务层接口，添加映射路径，在方法上添加映射路径"></a>7-controller类 ，注入服务层接口，添加映射路径，在方法上添加映射路径</h4><h4 id="8-创建Mapper-xml配置文件并配置。"><a href="#8-创建Mapper-xml配置文件并配置。" class="headerlink" title="8-创建Mapper.xml配置文件并配置。"></a>8-创建Mapper.xml配置文件并配置。</h4><h3 id><a href="#" class="headerlink" title="#"></a>#</h3>]]></content>
  </entry>
  <entry>
    <title>SpringCloud</title>
    <url>/2021/06/03/SpringCloud/</url>
    <content><![CDATA[<h2 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h2><p><img src="/2021/06/03/SpringCloud/cloud-diagram-1a4cad7294b4452864b5ff57175dd983.svg" alt="春云图"></p>
<h4 id="API-GateWay"><a href="#API-GateWay" class="headerlink" title="API GateWay"></a>API GateWay</h4><h4 id="Service-regeitry"><a href="#Service-regeitry" class="headerlink" title="Service regeitry"></a>Service regeitry</h4><h4 id="Config-server"><a href="#Config-server" class="headerlink" title="Config server"></a>Config server</h4><h4 id="Distributed-tracing"><a href="#Distributed-tracing" class="headerlink" title="Distributed tracing"></a>Distributed tracing</h4>]]></content>
  </entry>
  <entry>
    <title>SpringMVC</title>
    <url>/2021/03/19/SpringMVC/</url>
    <content><![CDATA[<h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><p>Spring Web MVC 是一种基于 Java 的实现了 Web MVC 设计模式的请求驱动类型的轻量级 Web 框架，即使用了 MVC 架构模式的思想，将 web 层进行职责解耦，基于请求驱动指的就是使用请求-响应模型，框架的目的就是帮助我们简化开发，Spring Web MVC 也是要简化我们日常 Web 开发的。在 传统的 Jsp/Servlet 技术体系中，如果要开发接口，一个接口对应一个 Servlet，会导致我们开发出许多 Servlet，使用 SpringMVC 可以有效的简化这一步骤。</p>
<p>Spring Web MVC 也是服务到工作者模式的实现，但进行可优化。前端控制器是 DispatcherServlet；应用控制器可以拆为处理器映射器(Handler Mapping)进行处理器管理和视图解析器(View Resolver)进行视图管理；页面控制器/动作/处理器为 Controller 接口（仅包含 ModelAndView handleRequest(request, response) 方法，也有人称作 Handler）的实现（也可以是任何的 POJO 类）；支持本地化（Locale）解析、主题（Theme）解析及文件上传等；提供了非常灵活的数据验证、格式化和数据绑定机制；提供了强大的约定大于配置（惯例优先原则）的契约式编程支持。</p>
<h2 id="SpringMVC-能够做什么"><a href="#SpringMVC-能够做什么" class="headerlink" title="SpringMVC 能够做什么"></a>SpringMVC 能够做什么</h2><ul>
<li>让我们能非常简单的设计出干净的 Web 层和薄薄的 Web 层；</li>
<li>进行更简洁的 Web 层的开发；</li>
<li>天生与 Spring 框架集成（如 IoC 容器、AOP 等）；</li>
<li>提供强大的约定大于配置的契约式编程支持；</li>
<li>能简单的进行 Web 层的单元测试；</li>
<li>支持灵活的 URL 到页面控制器的映射；</li>
<li>非常容易与其他视图技术集成，如 Velocity、FreeMarker 等等，因为模型数据不放在特定的 API 里，而是放在一个 Model 里（Map 数据结构实现，因此很容易被其他框架使用）；</li>
<li>非常灵活的数据验证、格式化和数据绑定机制，能使用任何对象进行数据绑定，不必实现特定框架的 API；</li>
<li>提供一套强大的 JSP 标签库，简化 JSP 开发；</li>
<li>支持灵活的本地化、主题等解析；</li>
<li>更加简单的异常处理；</li>
<li>对静态资源的支持；</li>
<li>支持 RESTful 风格</li>
</ul>
<h2 id="SpringMVC组件"><a href="#SpringMVC组件" class="headerlink" title="SpringMVC组件"></a>SpringMVC组件</h2><p>DispatcherServlet:前端控制器</p>
<p>HandlerMapping:处理器映射器</p>
<p>Handler:处理器</p>
<p>HandlerAdapter:处理器适配器</p>
<p>ViewResolvere:视图解析器</p>
<h2 id="SpringMVC工作流程"><a href="#SpringMVC工作流程" class="headerlink" title="SpringMVC工作流程"></a>SpringMVC工作流程</h2><p><img src="/2021/03/19/SpringMVC/image-20210319132933147.png" alt="image-20210319132933147"></p>
<h2 id="SpringMVC容器是Spring容器的子容器"><a href="#SpringMVC容器是Spring容器的子容器" class="headerlink" title="SpringMVC容器是Spring容器的子容器"></a>SpringMVC容器是Spring容器的子容器</h2>]]></content>
  </entry>
  <entry>
    <title>VUE动态加载菜单</title>
    <url>/2021/01/25/VUE%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E8%8F%9C%E5%8D%95/</url>
    <content><![CDATA[<h2 id="VUE动态加载菜单"><a href="#VUE动态加载菜单" class="headerlink" title="VUE动态加载菜单"></a>VUE动态加载菜单</h2><h3 id="1—数据准备"><a href="#1—数据准备" class="headerlink" title="1—数据准备"></a>1—数据准备</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MenuList: [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;menuName&quot;: &quot;我的主页&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;&quot;,</span><br><span class="line">        &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">        &quot;orderNum&quot;: 1,</span><br><span class="line">        &quot;open&quot;:1,</span><br><span class="line">        &quot;disabled&quot;: false,</span><br><span class="line">        &quot;perms&quot;: null,</span><br><span class="line">        &quot;type&quot;: 0,</span><br><span class="line">        &quot;children&quot;:[</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 11,</span><br><span class="line">                &quot;parentId&quot;: 1,</span><br><span class="line">                &quot;menuName&quot;: &quot;我的项目&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;myPro&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 1,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: &quot;&quot;,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[],</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 12,</span><br><span class="line">                &quot;parentId&quot;: 1,</span><br><span class="line">                &quot;menuName&quot;: &quot;我的任务&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;myTask&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 2,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 13,</span><br><span class="line">                &quot;parentId&quot;: 1,</span><br><span class="line">                &quot;menuName&quot;: &quot;我的周报&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;myWeekly&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 3,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: 2,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;menuName&quot;: &quot;项目管理&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;&quot;,</span><br><span class="line">        &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">        &quot;orderNum&quot;: 2,</span><br><span class="line">        &quot;open&quot;:0,</span><br><span class="line">        &quot;disabled&quot;: false,</span><br><span class="line">        &quot;perms&quot;: null,</span><br><span class="line">        &quot;type&quot;: 0,</span><br><span class="line">        &quot;children&quot;:[</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 21,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;项目及任务&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;pro&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 1,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 22,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;周报管理&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;weekly&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 2,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 23,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;里程碑&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;milestone&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 3,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 24,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;声学部周报&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;acousticsWeekly&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 3,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 25,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;显控部周报&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;displayControllerWeekly&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 3,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 26,</span><br><span class="line">                &quot;parentId&quot;: 2,</span><br><span class="line">                &quot;menuName&quot;: &quot;图形图像部周报&quot;,</span><br><span class="line">                &quot;url&quot;: &quot;&#x2F;imageWeekly&quot;,</span><br><span class="line">                &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">                &quot;orderNum&quot;: 3,</span><br><span class="line">                &quot;open&quot;:0,</span><br><span class="line">                &quot;disabled&quot;: false,</span><br><span class="line">                &quot;perms&quot;: null,</span><br><span class="line">                &quot;type&quot;: 0,</span><br><span class="line">                &quot;children&quot;:[]</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: 3,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;menuName&quot;: &quot;用户管理&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;&#x2F;user&quot;,</span><br><span class="line">        &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">        &quot;orderNum&quot;: 3,</span><br><span class="line">        &quot;open&quot;:0,</span><br><span class="line">        &quot;disabled&quot;: false,</span><br><span class="line">        &quot;perms&quot;: null,</span><br><span class="line">        &quot;type&quot;: 0,</span><br><span class="line">        &quot;children&quot;:[]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: 4,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;menuName&quot;: &quot;权限管理&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;&#x2F;auth&quot;,</span><br><span class="line">        &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">        &quot;orderNum&quot;: 4,</span><br><span class="line">        &quot;open&quot;:0,</span><br><span class="line">        &quot;disabled&quot;: false,</span><br><span class="line">        &quot;perms&quot;: null,</span><br><span class="line">        &quot;type&quot;: 0,</span><br><span class="line">        &quot;children&quot;:[]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: 5,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;menuName&quot;: &quot;文件管理&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;&#x2F;document&quot;,</span><br><span class="line">        &quot;icon&quot;: &quot;el-icon-user-solid&quot;,</span><br><span class="line">        &quot;orderNum&quot;: 5,</span><br><span class="line">        &quot;open&quot;:0,</span><br><span class="line">        &quot;disabled&quot;: false,</span><br><span class="line">        &quot;perms&quot;: null,</span><br><span class="line">        &quot;type&quot;: 0,</span><br><span class="line">        &quot;children&quot;:[]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>SpringSecurity微服务架构</title>
    <url>/2021/01/07/SpringSecurity%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h1 id="SpringSecurity微服务架构"><a href="#SpringSecurity微服务架构" class="headerlink" title="SpringSecurity微服务架构"></a>SpringSecurity微服务架构</h1><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p>auth_table</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">1</th>
<th>我的主页</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">2</td>
<td>项目管理</td>
</tr>
</tbody>
</table>
</div>
<p>auth_role_table</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>aid</th>
<th>rid</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>11</td>
</tr>
<tr>
<td>2</td>
<td>11</td>
</tr>
</tbody>
</table>
</div>
<p>role_table</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>11</th>
<th>管理员</th>
</tr>
</thead>
<tbody>
<tr>
<td>12</td>
<td>超级管理员</td>
</tr>
</tbody>
</table>
</div>
<p>user_role_table</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>uid</th>
<th>rid</th>
</tr>
</thead>
<tbody>
<tr>
<td>21</td>
<td>11</td>
</tr>
<tr>
<td>22</td>
<td>11</td>
</tr>
</tbody>
</table>
</div>
<p>user_table</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>21</th>
<th>admin</th>
</tr>
</thead>
<tbody>
<tr>
<td>22</td>
<td>peng</td>
</tr>
</tbody>
</table>
</div>
<h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><p>maven,springboot,mybatisplus,springcloud(grateway,nacos),redis,jwt</p>
]]></content>
  </entry>
  <entry>
    <title>SpringSecurity</title>
    <url>/2021/01/05/SpringSecurity/</url>
    <content><![CDATA[<h1 id="SpringSecurity"><a href="#SpringSecurity" class="headerlink" title="SpringSecurity"></a>SpringSecurity</h1><h2 id="1—导入jar包"><a href="#1—导入jar包" class="headerlink" title="1—导入jar包"></a>1—导入jar包</h2><h2 id="2—SecurityConfig"><a href="#2—SecurityConfig" class="headerlink" title="2—SecurityConfig"></a>2—SecurityConfig</h2><h2 id="3—LoginUserDetailsService"><a href="#3—LoginUserDetailsService" class="headerlink" title="3—LoginUserDetailsService"></a>3—LoginUserDetailsService</h2><h1 id="Security本质是一个过滤器链"><a href="#Security本质是一个过滤器链" class="headerlink" title="Security本质是一个过滤器链"></a>Security本质是一个过滤器链</h1><h4 id="FilterSecurityInterceptor-方法的权限过滤器"><a href="#FilterSecurityInterceptor-方法的权限过滤器" class="headerlink" title="FilterSecurityInterceptor(方法的权限过滤器)"></a>FilterSecurityInterceptor(方法的权限过滤器)</h4><h4 id="ExceptionTranslationFilter-异常过滤器"><a href="#ExceptionTranslationFilter-异常过滤器" class="headerlink" title="ExceptionTranslationFilter(异常过滤器)"></a>ExceptionTranslationFilter(异常过滤器)</h4><h4 id="UsernamePasswordAuthenticationFilter-对post请求拦截，验证用户名和密码"><a href="#UsernamePasswordAuthenticationFilter-对post请求拦截，验证用户名和密码" class="headerlink" title="UsernamePasswordAuthenticationFilter(对post请求拦截，验证用户名和密码)"></a>UsernamePasswordAuthenticationFilter(对post请求拦截，验证用户名和密码)</h4><h1 id="两个重要接口"><a href="#两个重要接口" class="headerlink" title="两个重要接口"></a>两个重要接口</h1><h2 id="UserDetailsService接口：查询数据库用户名和密码"><a href="#UserDetailsService接口：查询数据库用户名和密码" class="headerlink" title="UserDetailsService接口：查询数据库用户名和密码"></a>UserDetailsService接口：查询数据库用户名和密码</h2><p>创建类UsernamePasswordAuthenticationFilter ，重写三个方法</p>
<p>创建实现类UserDetailsService，编写查询数据过程，返回User对象。</p>
<h2 id="PasswordEncode-数据加密接口"><a href="#PasswordEncode-数据加密接口" class="headerlink" title="PasswordEncode(数据加密接口)"></a>PasswordEncode(数据加密接口)</h2><p>返回User对象里面密码加密</p>
<h1 id="认证和授权"><a href="#认证和授权" class="headerlink" title="认证和授权"></a>认证和授权</h1><h4 id="设置登录的用户名和密码"><a href="#设置登录的用户名和密码" class="headerlink" title="设置登录的用户名和密码"></a>设置登录的用户名和密码</h4><blockquote>
<h5 id="1—通过配置文件"><a href="#1—通过配置文件" class="headerlink" title="1—通过配置文件"></a>1—通过配置文件</h5><h5 id="2—通过配置类"><a href="#2—通过配置类" class="headerlink" title="2—通过配置类"></a>2—通过配置类</h5><p>1-config-SecurityConfig</p>
<p>2-继承WebSecurityConfigurerAdapter</p>
<p>3-重写configure</p>
</blockquote>
<h4 id="3—自定义编写实现类"><a href="#3—自定义编写实现类" class="headerlink" title="3—自定义编写实现类"></a>3—自定义编写实现类</h4><p>1-创建LoginUserDetailsService配置类，实现userDetailsService类。</p>
<p>2-编写接口，返回User对象，User对象有用户名和密码操作权限。</p>
<p>3-添加MyBatis，mysql，lombok依赖</p>
<p>4-创建数据库表</p>
<p>5-创建mapper接口</p>
<p>6-在LoginUserDetailsService调用mapper接口里面的方法查询数据库认证。</p>
<p>7-在启动类添加mapperScan</p>
<p>8-配置数据库信息</p>
<h4 id="4—自定义登录页面，登录页面无需认证可访问"><a href="#4—自定义登录页面，登录页面无需认证可访问" class="headerlink" title="4—自定义登录页面，登录页面无需认证可访问"></a>4—自定义登录页面，登录页面无需认证可访问</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void configure(HttpSecurity http) throws Exception&#123;</span><br><span class="line">    &#x2F;&#x2F;跳转到自定义登录页面</span><br><span class="line">    http.formLogin()</span><br><span class="line">            .loginPage(&quot;&#x2F;login.html&quot;)</span><br><span class="line">            .loginProcessingUrl(&quot;&#x2F;user&#x2F;login&quot;)&#x2F;&#x2F;登录访问路径</span><br><span class="line">            .defaultSuccessUrl(&quot;&#x2F;test&#x2F;index&quot;).permitAll()&#x2F;&#x2F;登录成功后跳转的路径</span><br><span class="line">            .and().authorizeRequests()</span><br><span class="line">                .antMatchers(&quot;&#x2F;&quot;,&quot;&#x2F;test&#x2F;hello&quot;,&quot;&#x2F;user&#x2F;login&quot;).permitAll() &#x2F;&#x2F;不需要认证的路径</span><br><span class="line">            .anyRequest().authenticated()</span><br><span class="line">            .and().csrf().disable();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="5—基于角色或权限的访问控制"><a href="#5—基于角色或权限的访问控制" class="headerlink" title="5—基于角色或权限的访问控制"></a>5—基于角色或权限的访问控制</h4><h5 id="hasAuthority（针对一个权限进行操作）"><a href="#hasAuthority（针对一个权限进行操作）" class="headerlink" title="hasAuthority（针对一个权限进行操作）"></a>hasAuthority（针对一个权限进行操作）</h5><p>1-在配置类中配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.antMatchers(&quot;&#x2F;test&#x2F;index&quot;).hasAuthority(&quot;admin&quot;)&#x2F;&#x2F;拥有此权限才能访问该页面</span><br></pre></td></tr></table></figure>
<p>2-在LoginUserDetailsService中，把返回的User对象设置权限。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List&lt;GrantedAuthority&gt; auths &#x3D;</span><br><span class="line">        AuthorityUtils.commaSeparatedStringToAuthorityList(&quot;admin&quot;);</span><br></pre></td></tr></table></figure>
<h5 id="hasAnyAuthority（针对多个权限进行操作）"><a href="#hasAnyAuthority（针对多个权限进行操作）" class="headerlink" title="hasAnyAuthority（针对多个权限进行操作）"></a>hasAnyAuthority（针对多个权限进行操作）</h5><h5 id="hasRole（针对一个角色进行操作）"><a href="#hasRole（针对一个角色进行操作）" class="headerlink" title="hasRole（针对一个角色进行操作）"></a>hasRole（针对一个角色进行操作）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.antMatchers(&quot;&#x2F;test&#x2F;index&quot;).hasRole(&quot;sale&quot;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AuthorityUtils.commaSeparatedStringToAuthorityList(&quot;admin,ROLE_sale&quot;);</span><br></pre></td></tr></table></figure>
<h5 id="hasAnyRole（针对多个角色进行操作）"><a href="#hasAnyRole（针对多个角色进行操作）" class="headerlink" title="hasAnyRole（针对多个角色进行操作）"></a>hasAnyRole（针对多个角色进行操作）</h5><h1 id="认证授权注解使用"><a href="#认证授权注解使用" class="headerlink" title="认证授权注解使用"></a>认证授权注解使用</h1><h2 id="开启注解"><a href="#开启注解" class="headerlink" title="开启注解"></a>开启注解</h2><h4 id="Secured（用户具有某个角色，可以访问方法）"><a href="#Secured（用户具有某个角色，可以访问方法）" class="headerlink" title="@Secured（用户具有某个角色，可以访问方法）"></a>@Secured（用户具有某个角色，可以访问方法）</h4><p>1-启动类（配置类）开启注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableGlobalMethodSecurity(securedEnabled &#x3D; true)</span><br></pre></td></tr></table></figure>
<p>2-在controller的方法上使用注解，设置角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Secured(&#123;&quot;ROLE_admin&quot;,&quot;ROLE_manager&quot;&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="PreAuthorize（进入方法前的权限验证，将登录用户的roles-permissions参数传到方法中）"><a href="#PreAuthorize（进入方法前的权限验证，将登录用户的roles-permissions参数传到方法中）" class="headerlink" title="@PreAuthorize（进入方法前的权限验证，将登录用户的roles/permissions参数传到方法中）"></a>@PreAuthorize（进入方法前的权限验证，将登录用户的roles/permissions参数传到方法中）</h4><p>1-启动类（配置类）开启注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableGlobalMethodSecurity(securedEnabled &#x3D; true,prePostEnabled &#x3D; true)</span><br></pre></td></tr></table></figure>
<p>2-在controller的方法上使用注解，设置权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@PreAuthorize(&quot;hasAnyAuthority(&#39;admin&#39;)&quot;)</span><br></pre></td></tr></table></figure>
<h4 id="PostAuthorize（在方法执行后再进行权限验证，适合验证有返回值的权限）"><a href="#PostAuthorize（在方法执行后再进行权限验证，适合验证有返回值的权限）" class="headerlink" title="@PostAuthorize（在方法执行后再进行权限验证，适合验证有返回值的权限）"></a>@PostAuthorize（在方法执行后再进行权限验证，适合验证有返回值的权限）</h4><p>1-启动类（配置类）开启注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableGlobalMethodSecurity(securedEnabled &#x3D; true,prePostEnabled &#x3D; true)</span><br></pre></td></tr></table></figure>
<p>2-在controller的方法上使用注解，设置角色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@PostAuthorize(&quot;hasAnyAuthority(&#39;admins&#39;)&quot;)</span><br><span class="line">@GetMapping(&quot;update&quot;)</span><br><span class="line">public String update()&#123;</span><br><span class="line">    System.out.println(&quot;update!!!!!!&quot;);</span><br><span class="line">    return &quot;hello update&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="PostFilter（方法返回数据进行过滤）"><a href="#PostFilter（方法返回数据进行过滤）" class="headerlink" title="@PostFilter（方法返回数据进行过滤）"></a>@PostFilter（方法返回数据进行过滤）</h4><h4 id="PreFilter（传入方法数据进行过滤）"><a href="#PreFilter（传入方法数据进行过滤）" class="headerlink" title="@PreFilter（传入方法数据进行过滤）"></a>@PreFilter（传入方法数据进行过滤）</h4>]]></content>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2021/01/21/docker/</url>
    <content><![CDATA[<h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2>]]></content>
  </entry>
  <entry>
    <title>axios</title>
    <url>/2020/12/11/axios/</url>
    <content><![CDATA[<h1 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h1><h2 id="1—接口文档格式"><a href="#1—接口文档格式" class="headerlink" title="1—接口文档格式"></a>1—接口文档格式</h2><div class="table-container">
<table>
<thead>
<tr>
<th>接口名</th>
<th>请求方式</th>
<th>请求参数</th>
<th>请求地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>获取所有学生</td>
<td>get</td>
<td>无参</td>
<td><a href="http:/localhost:9999/student/student/getAllStudent">href</a></td>
</tr>
<tr>
<td>根据id获取学生</td>
<td>get</td>
<td>id string</td>
<td><a href="http:/localhost:9999/student/student/getStudentById">href</a></td>
</tr>
<tr>
<td>根据名字获取学生</td>
<td>post</td>
<td>name string</td>
<td><a href="http:/localhost:9999/student/student/getStudentByName">href</a></td>
</tr>
<tr>
<td>获取所有学生</td>
<td>post</td>
<td>无参</td>
<td><a href="http:/localhost:9999/student/student/getAllStudent">href</a></td>
</tr>
</tbody>
</table>
</div>
<p>http:/localhost:9999/student/student/==getAllStudent==</p>
<p>==getAllStudent==对应controller中getMapping/postMapping后括号中的内容</p>
<h2 id="2—axios"><a href="#2—axios" class="headerlink" title="2—axios"></a>2—axios</h2><p>axios是基于promise对ajax的一种封装</p>
<p>ajax mvc</p>
<p>axios mvvm</p>
<h2 id="3—axios的基本使用"><a href="#3—axios的基本使用" class="headerlink" title="3—axios的基本使用"></a>3—axios的基本使用</h2><p><img src="/2020/12/11/axios/image-20201211093543668.png" alt="image-20201211093543668"></p>
<p><img src="/2020/12/11/axios/image-20201211100429231.png" alt="image-20201211100429231"></p>
<p><img src="/2020/12/11/axios/image-20201211100755390.png" alt="image-20201211100755390"></p>
<h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p><img src="/2020/12/11/axios/image-20201211101448804.png" alt="image-20201211101448804"></p>
<p><img src="/2020/12/11/axios/image-20201211101853802.png" alt="image-20201211101853802"></p>
<p><img src="/2020/12/11/axios/image-20201222163056709.png" alt="image-20201222163056709"></p>
]]></content>
  </entry>
  <entry>
    <title>mybatis</title>
    <url>/2020/12/31/mybatis/</url>
    <content><![CDATA[<h1 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h1>]]></content>
  </entry>
  <entry>
    <title>axios-vue</title>
    <url>/2020/12/23/axios-vue/</url>
    <content><![CDATA[<h1 id="axios-vue"><a href="#axios-vue" class="headerlink" title="axios-vue"></a>axios-vue</h1><h2 id="1—跨域问题"><a href="#1—跨域问题" class="headerlink" title="1—跨域问题"></a>1—跨域问题</h2><p>在controller中添加注解@CrossOrigin</p>
<h2 id="2—axios在vue中的模块封装"><a href="#2—axios在vue中的模块封装" class="headerlink" title="2—axios在vue中的模块封装"></a>2—axios在vue中的模块封装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;封装位置  文件位置: .&#x2F;network&#x2F;request&#x2F;request</span><br><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line"></span><br><span class="line">export function request(config,success,fail) &#123;</span><br><span class="line">    axios(&#123;</span><br><span class="line">        url:config</span><br><span class="line">    &#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">        success(res);</span><br><span class="line">    &#125;).catch(err&#x3D;&gt;&#123;</span><br><span class="line">        fail(err);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;调用者位置</span><br><span class="line">import &#123;request&#125; from &quot;.&#x2F;network&#x2F;request&#x2F;request&quot;;</span><br><span class="line">request(&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;userList&#39;,res&#x3D;&gt;&#123;</span><br><span class="line">  console.log(res);</span><br><span class="line">&#125;,err&#x3D;&gt;&#123;</span><br><span class="line">  console.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;封装位置</span><br><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line"></span><br><span class="line">export function request(config) &#123;</span><br><span class="line">    axios.defaults.baseURL&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&quot;</span><br><span class="line">    axios(</span><br><span class="line">        config.url</span><br><span class="line">    ).then(</span><br><span class="line">        res&#x3D;&gt;&#123;</span><br><span class="line">            config.success(res)</span><br><span class="line">        &#125;</span><br><span class="line">    ).catch(err&#x3D;&gt;&#123;</span><br><span class="line">        config.fail(err);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;调用者位置</span><br><span class="line">import &#123;request&#125; from &quot;.&#x2F;network&#x2F;request&#x2F;request&quot;;</span><br><span class="line">request(&#123;</span><br><span class="line">  url:&#39;userList&#39;,</span><br><span class="line">  success:res&#x3D;&gt;&#123;</span><br><span class="line">    console.log(res);</span><br><span class="line">  &#125;,</span><br><span class="line">  fail:err&#x3D;&gt;&#123;</span><br><span class="line">    config.log(res);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>初等函数图像</title>
    <url>/2020/05/22/images/</url>
    <content><![CDATA[<h1 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h1><h2 id="正弦和余弦"><a href="#正弦和余弦" class="headerlink" title="正弦和余弦"></a>正弦和余弦</h2><img src="/2020/05/22/images/sinx&cosx.jpg" class title="正弦和余弦">
<hr>
<h2 id="正切和余切"><a href="#正切和余切" class="headerlink" title="正切和余切"></a>正切和余切</h2><img src="/2020/05/22/images/tanx&cotx.jpg" class title="正切和余切">
<hr>
<h2 id="正割和余割"><a href="#正割和余割" class="headerlink" title="正割和余割"></a>正割和余割</h2><img src="/2020/05/22/images/secx&cscx.jpg" class title="正割和余割">
<hr>
<h1 id="反三角函数"><a href="#反三角函数" class="headerlink" title="反三角函数"></a>反三角函数</h1><img src="/2020/05/22/images/arcsinx&arccosx&arctanx.jpg" class title="反三角函数">
<hr>
<center><font color="OliveDrab" size="6" face="STCAIYUN">
    曾经沧海难为水，除却巫山不是云。
</font></center>

]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>hello-world</title>
    <url>/2020/05/19/hello-world/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Hello World!</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<h1>Hello Hexo!</h1>	

<body>
	<p>hexo上传图片代码</p>
	<xmp></xmp>
	{*%asset_img example.jpg example image%}
	<h1>评论留言代码</h1>
	<p>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css">
  		<script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script>

		<-- 添加一个容器-->
		<div id="gitalk-container"></div>

		<-- 生成 gitalk 插件-->
		var gitalk = new Gitalk({
  		clientID: 'a64d92bd9ece9588191d', //Client ID

  		clientSecret: 'f010a5b6807453b8b047bb9f0ebf7100381c16ff', //Client Secret

  		repo: 'BlogTalk',//仓库名称
  		owner: 'TotoroKingdom',//仓库拥有者
  		admin: ['TotoroKingdom'],
  		id: location.href,      // Ensure uniqueness and length less than 50
  		distractionFreeMode: false  // Facebook-like distraction free mode
})

gitalk.render('gitalk-container')
	</--></--></p>
</body>
</html>]]></content>
  </entry>
  <entry>
    <title>javaWeb</title>
    <url>/2021/07/01/javaWeb/</url>
    <content><![CDATA[<h1 id="javaWeb"><a href="#javaWeb" class="headerlink" title="javaWeb"></a>javaWeb</h1><h4 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h4><h5 id="response重定向"><a href="#response重定向" class="headerlink" title="response重定向"></a>response重定向</h5><p>客户端A请求一个Web资源B时，B通知A去访问Web资源C。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void sendRedirect(String var1) throws IOException;</span><br></pre></td></tr></table></figure>
<h5 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h5><p>url不会变化</p>
<h4 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h4><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><h4 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h4><p>1、服务器会给每一个用户（浏览器）创建一个    Session对象</p>
<p>2、一个Session独占一个浏览器，浏览器关闭之前Session都存在</p>
<p>3、用户登录之后，整个网站它都能访问。</p>
<h4 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h4><p>过滤网站的数据。</p>
<p>1、过滤器中的所有代码，在过滤特定请求的时候执行</p>
<p>2、让过滤器继续执行：chain.doFilter(req,resp)</p>
<h4 id="监听器（Listener）"><a href="#监听器（Listener）" class="headerlink" title="监听器（Listener）"></a>监听器（Listener）</h4><p>实现一个监听器的接口</p>
]]></content>
  </entry>
  <entry>
    <title>jwt+cookie+session</title>
    <url>/2021/01/13/jwt+cookie+session/</url>
    <content><![CDATA[<h1 id="jwt-cookie-session"><a href="#jwt-cookie-session" class="headerlink" title="jwt+cookie+session"></a>jwt+cookie+session</h1><h2 id="http为无状态协议"><a href="#http为无状态协议" class="headerlink" title="http为无状态协议"></a>http为无状态协议</h2><h2 id="cookie无法跨域（放在客户端）"><a href="#cookie无法跨域（放在客户端）" class="headerlink" title="cookie无法跨域（放在客户端）"></a>cookie无法跨域（放在客户端）</h2><h2 id="session-记录服务器和客户端会话状态的机制"><a href="#session-记录服务器和客户端会话状态的机制" class="headerlink" title="session:记录服务器和客户端会话状态的机制"></a>session:记录服务器和客户端会话状态的机制</h2><p>session基于cookie实现，session存储在服务器端，sessionID存储在客户端的cookie中。</p>
<h2 id="跨域需要使用jwt"><a href="#跨域需要使用jwt" class="headerlink" title="跨域需要使用jwt"></a>跨域需要使用jwt</h2><p>token:访问资源接口（API）时所需要的资源凭证**</p>
<p><strong>简单 token 的组成：</strong> uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign（签名，token 的前几位以哈希算法压缩成的一定长度的十六进制字符串）    </p>
<ul>
<li><p><strong>特点：</strong></p>
</li>
<li><ul>
<li><strong>服务端无状态化、可扩展性好</strong></li>
<li><strong>支持移动端设备</strong></li>
<li>安全</li>
<li>支持跨程序调用</li>
</ul>
</li>
</ul>
<h2 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a><strong>JWT</strong></h2><ul>
<li>JSON Web Token（简称 JWT）是目前最流行的<strong>跨域认证</strong>解决方案。</li>
<li>是一种<strong>认证授权机制</strong>。</li>
<li>JWT 是为了在网络应用环境间<strong>传递声明</strong>而执行的一种基于 JSON 的开放标准（RFC 7519）。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源。比如用在用户登录上。</li>
<li>可以使用 HMAC 算法或者是 RSA 的公/私秘钥对 JWT 进行签名。因为数字签名的存在，这些传递的信息是可信的。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>pro-server</title>
    <url>/2020/12/24/pro-server/</url>
    <content><![CDATA[<h1 id="pro-server"><a href="#pro-server" class="headerlink" title="pro-server"></a>pro-server</h1><p>1—新建springboot项目,勾选spring web</p>
<p>2—导入.xml依赖</p>
<p>3—配置.yml连接数据库</p>
<p>4—pojo</p>
<p>5—mapper</p>
<p>6—service</p>
<p>7—controller</p>
<p>8—在Application中添加@MapperScan(basePackages = “com.hdgd.mapper”)</p>
]]></content>
  </entry>
  <entry>
    <title>mysql语句</title>
    <url>/2020/12/11/mysql%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>mysql语句</p>
<p>//定义外键约束 </p>
<p>ALTER TABLE student </p>
<p>ADD CONSTRAINT fk_class_id  //外键约束的名称fk_class_id可以任意</p>
<p> FOREIGN KEY (class_id)     //指定了class_id作为外键</p>
<p> REFERENCES class (id);    //指定了这个外键将关联到class表的id列（即class表的主键）</p>
]]></content>
  </entry>
  <entry>
    <title>security</title>
    <url>/2020/11/23/security/</url>
    <content><![CDATA[<h1 id="security"><a href="#security" class="headerlink" title="security"></a>security</h1><p>1—添加pom依赖jar包</p>
<p>2—创建SecurityConfig</p>
<p>3—extends WebSecurityConfigurerAdapter</p>
<p>4—config(AuthenticationManagerBuilder)</p>
<p>5—数据库连接<img src="/2020/11/23/security/image-20201123095631760.png" alt="image-20201123095631760"></p>
]]></content>
  </entry>
  <entry>
    <title>spring</title>
    <url>/2020/07/05/spring/</url>
    <content><![CDATA[ <img src="/2020/07/05/spring/SpringFramework.png" class title="SpringFramework">
<h2 id="核心容器"><a href="#核心容器" class="headerlink" title="核心容器"></a>核心容器</h2><p>Chrome浏览器搜索网页内容：Fn+F3</p>
<p>spring-beans</p>
<p>spring-core</p>
<p>spring-context</p>
<p>spring-expression</p>
<h1 id="IOC-Inverse-of-Control"><a href="#IOC-Inverse-of-Control" class="headerlink" title="IOC(Inverse of Control)"></a>IOC(Inverse of Control)</h1><p>—通过IOC，开发人员不需要关心对象的创建过程，该过程交给Spring IOC容器完成.Spring IOC容器通过反射机制创建类的实例。</p>
<p>—降低对象之间的耦合关系</p>
<p>—将对象类的创建交给Spring容器管理，转移控制权。</p>
<h1 id="DI-Dependency-Injection"><a href="#DI-Dependency-Injection" class="headerlink" title="DI(Dependency Injection)"></a>DI(Dependency Injection)</h1><p>—Spring IOC容器创建对象的时候，同时为这个对象注入它所依赖的值。这个对象之间的关系也交给了Spring IOC容器来维护</p>
<p>—将对象与对象之间的关系交给Spring IOC容器维护，转移控制权。</p>
<p>—依赖注入是Spring IOC容器在运行期间，动态的将依赖关系注入到对象中。</p>
<p>—依赖注入是控制反转的实现方式</p>
<p>—实现对象与对象之间的解耦(高内聚，低耦合)</p>
<h1 id="AOP-Aspect-Oriented-Programming"><a href="#AOP-Aspect-Oriented-Programming" class="headerlink" title="AOP(Aspect Oriented Programming)"></a>AOP(Aspect Oriented Programming)</h1><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1>]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>servlet体系结构</title>
    <url>/2021/05/06/servlet%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>servlet执行流程</p>
<ol>
<li>客户端(浏览器)向服务端发起HTTP请求；</li>
<li>Tomcat服务器通过解析请求地址(URL)，找到对应的web应用</li>
</ol>
<p><img src="https://pic4.zhimg.com/v2-d33d29d577126b596b2a7e86853c84c3_b.png" alt="img"></p>
<ol>
<li>找到web应用的web.xml，解析出客户端想访问的web资源；</li>
<li>如果发现Servlet是第一次访问,服务器就会加载servlet，创建servlet对象；</li>
<li>调用servlet的init()方法；</li>
<li>再调用servlet的service()方法;</li>
<li>service()方法执行完，服务器会响应数据给客户端浏览器；</li>
</ol>
<h2 id="servlet体系结构"><a href="#servlet体系结构" class="headerlink" title="servlet体系结构"></a>servlet体系结构</h2><p><img src="/2021/05/06/servlet%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/1562929_1495091266467_AA89EDF1B0D43CAA9A893C73A1615398.png" alt="img"></p>
<h2 id="tomcat目录层次结构"><a href="#tomcat目录层次结构" class="headerlink" title="tomcat目录层次结构"></a>tomcat目录层次结构</h2><p><img src="/2021/05/06/servlet%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/v2-d3ecce3722bb00063eb8a5166a158569_r.jpg" alt="preview"></p>
<p>javaWeb标准目录结构</p>
<p><img src="/2021/05/06/servlet%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/v2-69c020936dcbb926164b6e16f37b1b56_r.jpg" alt="preview"></p>
]]></content>
  </entry>
  <entry>
    <title>shiro</title>
    <url>/2020/12/21/shiro/</url>
    <content><![CDATA[<h1 id="shiro"><a href="#shiro" class="headerlink" title="shiro"></a>shiro</h1><h2 id="Subject"><a href="#Subject" class="headerlink" title="Subject"></a>Subject</h2><p>​    通过安全管理器进行 认证 和授权</p>
<p>SecurityManager 安全管理器</p>
<p>​    SecurityManager是shiro框架的核心</p>
<h2 id="Authenticator-认证器"><a href="#Authenticator-认证器" class="headerlink" title="Authenticator 认证器"></a>Authenticator 认证器</h2><p>​    对主体进行认证</p>
<h2 id="Authorizer-授权器"><a href="#Authorizer-授权器" class="headerlink" title="Authorizer 授权器"></a>Authorizer 授权器</h2><p>​    用户通过认证器认证通过，在访问时判断用户是否有相应的权限。</p>
<h2 id="Realm-接口"><a href="#Realm-接口" class="headerlink" title="Realm 接口"></a>Realm 接口</h2><p>​    SecurityManager 进行安全认证需要通过 Realm 获取用户权限数据。</p>
<p>​    Realm 从配置文件或者数据库读取用户的权限信息</p>
<p>​    多种实现：1：将用户权限信息放到配置文件</p>
<p>​                        2：将用户权限信息放到数据库</p>
<h2 id="SessionManager-会话管理器"><a href="#SessionManager-会话管理器" class="headerlink" title="SessionManager 会话管理器"></a>SessionManager 会话管理器</h2><h2 id="SessionDAO"><a href="#SessionDAO" class="headerlink" title="SessionDAO"></a>SessionDAO</h2><p>​    对session会话操作的一套接口，将会话信息存储到redis数据库。</p>
<h2 id="CacheManager-缓存管理器"><a href="#CacheManager-缓存管理器" class="headerlink" title="CacheManager 缓存管理器"></a>CacheManager 缓存管理器</h2><p>​    将用户权限数据缓存，提高性能。</p>
<h2 id="Cryptography"><a href="#Cryptography" class="headerlink" title="Cryptography"></a>Cryptography</h2><p>​    密码管理器，shiro提供一套加密/解密的组件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;shiro内置过滤器</span><br><span class="line">&#x2F;*</span><br><span class="line">anon: 无需认证就可访问</span><br><span class="line">aughc: 必须认证才能访问</span><br><span class="line">user： 必须拥有 记住我 功能才能用</span><br><span class="line">perms: 拥有对某个资源的权限才能访问</span><br><span class="line">role: 拥有某个角色权限才能访问</span><br><span class="line"> *&#x2F;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>springSecurity流程</title>
    <url>/2021/01/12/springSecurity%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>springSecurity流程</p>
<h5 id="1—mapper-使用左连接查询menu资源权限信息"><a href="#1—mapper-使用左连接查询menu资源权限信息" class="headerlink" title="1—mapper  使用左连接查询menu资源权限信息"></a>1—mapper  使用左连接查询menu资源权限信息</h5><h5 id="2—自定义SecurityConfig-config"><a href="#2—自定义SecurityConfig-config" class="headerlink" title="2—自定义SecurityConfig(config)"></a>2—自定义SecurityConfig(config)</h5><p>3—登录成功处理器</p>
<p>4—登录失败处理器</p>
<p>5—UserDetails</p>
<h5 id="6—UserDetailsService-serviceImpl"><a href="#6—UserDetailsService-serviceImpl" class="headerlink" title="6—UserDetailsService(serviceImpl)"></a>6—UserDetailsService(serviceImpl)</h5><p>7—重写基于数据库的权限数据源—FilterInvocationSecurityMetadataSource </p>
<p>8—重写决策权限—</p>
<p>9—实现AbstractSecurityInterceptor</p>
]]></content>
  </entry>
  <entry>
    <title>shell</title>
    <url>/2021/03/09/shell/</url>
    <content><![CDATA[<h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><h2 id="nginx安装脚本"><a href="#nginx安装脚本" class="headerlink" title="nginx安装脚本"></a>nginx安装脚本</h2><p><img src="/2021/03/09/shell/image-20210309094449341.png" alt="image-20210309094449341"></p>
<p>shell脚本运行步骤</p>
<p>1—创建一个.sh文件</p>
<p>vim hello.sh</p>
<p>2—在hello.sh里编写shell代码</p>
<p>echo hello world</p>
<p>3—执行shell脚本文件</p>
<p>bash hello.sh</p>
<p>或者chmod 700 hello.sh</p>
<p>./hello.sh</p>
<p>>                     写入，会覆盖掉文件原有的内容</p>
<p>>&gt;                    追加写入，不会覆盖原有内容</p>
<p>echo                输出</p>
<p>-n                    不换行</p>
<p>-e                    如若字符串出现一下支付，则特别加以处理，而不会将它当成一般文字输出；</p>
<p>\a                        发出警告声</p>
<p>\b                        删除前一个字符</p>
<p>\c                        最后不加上换行符号</p>
<p>\f                        换行但光标仍旧停留在原来的位置</p>
<p>\n                        换行且光标移至行首</p>
<p>\r                        光标移至行首，但不换行</p>
<p>\t                        插入tab</p>
<h2 id="数学比较运算"><a href="#数学比较运算" class="headerlink" title="数学比较运算"></a>数学比较运算</h2><p>-eq            等于</p>
<p>-gt            大于</p>
<p>-lt            小于</p>
<p>-ge            大于等于</p>
<p>-le            小于等于</p>
<p>-ne            不等于</p>
<h2 id="文件比较与检查"><a href="#文件比较与检查" class="headerlink" title="文件比较与检查"></a>文件比较与检查</h2><p>-d        检查文件是否存在且为目录</p>
<p>-e        检查文件是否存在</p>
<p>-f        检查文件是否存在且为文件</p>
<p>-r        检查文件是否存在且可读</p>
<p>-s        检查文件是否存在且不为空</p>
<p>-w        检查文件是否存在且可写</p>
<p>-x        检查文件是否存在且可执行</p>
<p>-o        检查文件是否存在且被当前用户拥有</p>
<p>-G        检查文件是否存在并且默认组为当前用户组</p>
]]></content>
  </entry>
  <entry>
    <title>vue</title>
    <url>/2020/11/18/vue/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>vue</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>

    <div id="app">
        <h3 v-html="content"></h3>
        <h3 v-text="content"></h3>
        <input type="button" value="v-on指令" v-on:click="dolt">
        <!--点击-->
        <input type="button" value="v-on指令" @click="dolt">
        <h2 v-text="msg" @click="changemsg"></h2>
        <div class="input=num">
            <button @click="sub">-</button>
            <span v-text="num"></span>
            <button @click="add">+</button>
        </div>
        <img src="/2020/11/18/vue/blog\source\_posts\vue\106.jpg" v-show="false">
        <!--图片的隐藏与显示-->
        <input type="button" value="隐藏与显示" @click="changeIsShow"><br>
        <img src="/2020/11/18/vue/blog\source\_posts\vue\108.jpg" v-show="isShow">



    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <script>
        var app = new Vue({
            el: '#app', //挂载点，对应div里的id
            data: {
                msg: 'Hello are you ok!',
                content: "<a href='http://www.baidu.com' target="_blank" rel="noopener">刘润欣喝咖啡</a>",
                num: 1,
                isShow: true,
            },
            methods: {
                add: function() {
                    //console.log('add');
                    if (this.num < 10) {
                        this.num += 1;
                    } else {
                        alert('你的钱够多了')
                    }
                },
                sub: function() {
                    //console.log('sub')
                    if (this.num > 0) {
                        this.num -= 1;
                    } else {
                        alert('不能再少了')
                    }
                },
                dolt: function() {
                    alert("刘润欣喝瑞星咖啡");
                },
                changemsg: function() {
                    this.msg += "我OK"
                },
                changeIsShow: function() {
                    this.isShow = !this.isShow;
                }
            }
        })
    </script>


</body>

</html>]]></content>
  </entry>
  <entry>
    <title>swagger</title>
    <url>/2020/12/24/swagger/</url>
    <content><![CDATA[<h1 id="swagger"><a href="#swagger" class="headerlink" title="swagger"></a>swagger</h1><h2 id="1—新建spring-boot项目"><a href="#1—新建spring-boot项目" class="headerlink" title="1—新建spring boot项目"></a>1—新建spring boot项目</h2><h2 id="2—导入依赖"><a href="#2—导入依赖" class="headerlink" title="2—导入依赖"></a>2—导入依赖</h2><h2 id="3—编号controller测试"><a href="#3—编号controller测试" class="headerlink" title="3—编号controller测试"></a>3—编号controller测试</h2><h2 id="4—配置swagger—-gt-config"><a href="#4—配置swagger—-gt-config" class="headerlink" title="4—配置swagger—&gt;config"></a>4—配置swagger—&gt;config</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class SwaggerConfig &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5—测试地址"><a href="#5—测试地址" class="headerlink" title="5—测试地址"></a>5—测试地址</h2><p><a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>vue学习</title>
    <url>/2020/11/19/vue%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h1><h3 id="elementUI"><a href="#elementUI" class="headerlink" title="elementUI"></a>elementUI</h3><p>iview</p>
<p>ice</p>
<p>amazeUI</p>
<h3 id="vue-element-admin"><a href="#vue-element-admin" class="headerlink" title="vue-element-admin"></a>vue-element-admin</h3><p>1—安装idea vue插件</p>
]]></content>
  </entry>
  <entry>
    <title>springsecurity学习</title>
    <url>/2021/01/20/springsecurity%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>springsecurity学习</p>
<p>1—UserDetailsServiceImpl</p>
<p>==implements UserDetailsService==</p>
<p>2—WebSecurityConfiguration</p>
<p>==extends WebSecurityConfigurerAdapter==</p>
<p>3—CustomizeAbstractSecurityInterceptor</p>
<p>==extends AbstractSecurityInterceptor implements Filter==</p>
<p>4—CustomizeAccessDecisionManager</p>
<p>==implements AccessDecisionManager==</p>
<p>5—CustomizeAccessDeniedHandler</p>
<p>==implements AccessDeniedHandler==</p>
<p>6—CustomizeAuthenticationEntryPoint</p>
<p>==implements  AuthenticationEntryPoint==</p>
<p>7—CustomizeAuthenticationFailureHandler</p>
<p>==implements AuthenticationFailureHandler==</p>
<p>8—CustomizeAuthenticationSeccessHandler</p>
<p>==implements AuthenticationSuccessHandler==</p>
<p>9—CustomizeFilterInvocationSecurityMetadataSource</p>
<p>==implements FilterInvocationSecurityMetadataSource==</p>
<p>10—CustomizeLogoutSuccessHandler</p>
<p>==implements LogoutSuccessHandler==</p>
<p>11—CustomizeSessionInfomationExpiredStrategy</p>
<p>==implements SessionInformationExpiredStrategy==</p>
<p>12—UserAuthenticationFilter</p>
<p>==extends UsernamePasswordAuthenticationFilter==</p>
]]></content>
  </entry>
  <entry>
    <title>vue-slot</title>
    <url>/2020/11/27/vue-slot/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>vue slot</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>

    <div id="app">
        <todo>
            <todo-title slot="todo-title" :title="title"></todo-title>
            <todo-items slot></todo-items>
        </todo>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <script>
        Vue.conponent("todo", {
            template: '<div>\
                            <slot name="todo-title"></slot>\
                            <ul>\
                                <slot name="todo-items"></slot>\
                            <ul>\
                        </div>'
        });

        Vue.conponent("todo-title", {
            props: ['title'],
            template: '<div>vue-slot</div>'
        });

        Vue.conponent("todo-items", {
            props: ['item'],
            template: '<li></li>'
        });

        var app = new Vue({
            el: "#app",
            data: {
                title: "标题",
                todoItems: ['ok', 'nihao']
            }
        })
    </script>
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>前端学习</title>
    <url>/2020/11/18/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="前端学习"><a href="#前端学习" class="headerlink" title="前端学习"></a>前端学习</h1><p>1—html</p>
<p>2—css</p>
<p>3—javascript</p>
<p>4—ajax</p>
<h3 id="5—vue"><a href="#5—vue" class="headerlink" title="5—vue"></a>5—vue</h3><p>1-javaScript框架</p>
<p>2-dom操作</p>
<p>3-响应式数据驱动</p>
<p>4—vue-element-admin   or    ice</p>
<p>6—图标库：onebugman.cn</p>
<p>6—Axios异步通信框架</p>
]]></content>
  </entry>
  <entry>
    <title>vue所需环境</title>
    <url>/2020/11/24/vue%E6%89%80%E9%9C%80%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="vue所需环境"><a href="#vue所需环境" class="headerlink" title="vue所需环境"></a>vue所需环境</h1><p>nodejs</p>
<p><img src="/2020/11/24/vue%E6%89%80%E9%9C%80%E7%8E%AF%E5%A2%83/image-20201124132825510.png" alt="image-20201124132825510"></p>
<p>npm淘宝镜像安装：</p>
<p>nmp install —registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p>
<p>vue-cli</p>
<h1 id="前后端的分离"><a href="#前后端的分离" class="headerlink" title="前后端的分离"></a>前后端的分离</h1><p>SpringBoot与vue 进行前后端分离，主要有这么两种方式：</p>
<p>⑴ 利用vue项目 打包（npm run build命令）出来的dist文件夹拷贝到springboot项目的static 文件目录。</p>
<p>⑵ 利用 nginx 的反向代理，不用将dist目录拷贝到static文件目录下。</p>
<p>核心思想是前端html页面通过ajax调用后端的restuful api接口并使用json数据进行交互</p>
<p>后端只返回json数据，前端只接收json数据</p>
<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1>]]></content>
  </entry>
  <entry>
    <title>vue双向绑定</title>
    <url>/2020/11/22/vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>vue双向绑定</title>
<meta name="generator" content="Hexo 4.2.1"></head>

<body>

    <div id="app">
        <input type="radio" value="吃饭" v-model="message">吃饭
        <input type="radio" value="睡觉" v-model="message">睡觉
        <input type="radio" value="打豆豆" v-model="message">打豆豆
        <p></p>
        <select v-model="coco">
            <option>喜欢喝啤酒QAQ</option>
            <option>喜欢喝可乐QAQ</option>
            <option>喜欢喝雪碧QAQ</option>
        </select>
        <span></span>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <script>
        var app = new Vue({
            el: '#app',
            data: {
                message: "",
                coco: "喜欢喝可乐QAQ",
            }
        })
    </script>
</body>

</html>]]></content>
  </entry>
  <entry>
    <title>创建vue项目步骤</title>
    <url>/2020/11/27/%E5%88%9B%E5%BB%BAvue%E9%A1%B9%E7%9B%AE%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<h1 id="创建vue项目步骤-需使用管理员模式"><a href="#创建vue项目步骤-需使用管理员模式" class="headerlink" title="创建vue项目步骤(需使用管理员模式)"></a>创建vue项目步骤(需使用管理员模式)</h1><h2 id="1—新建-vue文件"><a href="#1—新建-vue文件" class="headerlink" title="1—新建.vue文件"></a>1—新建.vue文件</h2><p>vue init webpack hello-vue</p>
<h2 id="2—进入工程目录"><a href="#2—进入工程目录" class="headerlink" title="2—进入工程目录"></a>2—进入工程目录</h2><p>cd hello-vue</p>
<h2 id="3—安装vue-router"><a href="#3—安装vue-router" class="headerlink" title="3—安装vue-router"></a>3—安装vue-router</h2><p>npm install vue-router —save-dev</p>
<h2 id="4—安装element-UI"><a href="#4—安装element-UI" class="headerlink" title="4—安装element-UI"></a>4—安装element-UI</h2><p>npm i element-ui -S</p>
<h2 id="5—安装依赖"><a href="#5—安装依赖" class="headerlink" title="5—安装依赖"></a>5—安装依赖</h2><p>npm install</p>
<h2 id="6—安装SASS加载器"><a href="#6—安装SASS加载器" class="headerlink" title="6—安装SASS加载器"></a>6—安装SASS加载器</h2><p>npm install sass-loader node-sass —save-dev</p>
<h2 id="7—启动测试"><a href="#7—启动测试" class="headerlink" title="7—启动测试"></a>7—启动测试</h2><p>npm run dev</p>
<h2 id="8—在idea中打开项目"><a href="#8—在idea中打开项目" class="headerlink" title="8—在idea中打开项目"></a>8—在idea中打开项目</h2><h2 id="9—在src下新建router文件夹"><a href="#9—在src下新建router文件夹" class="headerlink" title="9—在src下新建router文件夹"></a>9—在src下新建router文件夹</h2><h2 id="10—在src下新建views文件夹"><a href="#10—在src下新建views文件夹" class="headerlink" title="10—在src下新建views文件夹"></a>10—在src下新建views文件夹</h2><h2 id="11-在router下新建-js文件"><a href="#11-在router下新建-js文件" class="headerlink" title="11-在router下新建.js文件"></a>11-在router下新建.js文件</h2><p>import Vue from ‘vue’</p>
<p>import Router from ‘vue-router’</p>
<p>Vue.use(Router);</p>
<p>export default new Router({</p>
<p>routes:[</p>
<p>{}</p>
<p>]</p>
<p>})</p>
<h2 id="12-在主页添加router-link"><a href="#12-在主页添加router-link" class="headerlink" title="12-在主页添加router-link"></a>12-在主页添加router-link</h2><h2 id="13—安装element-ui"><a href="#13—安装element-ui" class="headerlink" title="13—安装element-ui"></a>13—安装element-ui</h2><p>添加mian.js的引用</p>
<h3 id="14—安装axios"><a href="#14—安装axios" class="headerlink" title="14—安装axios"></a>14—安装axios</h3><p>添加mian.js的引用</p>
]]></content>
  </entry>
  <entry>
    <title>多线程</title>
    <url>/2021/06/29/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h4 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a>线程创建</h4><h5 id="Thread-class"><a href="#Thread-class" class="headerlink" title="Thread class"></a>Thread class</h5><p>1、自定义线程类继承Thread类</p>
<p>2、重写run()方法，编写线程执行体</p>
<p>3、创建线程对象，调用start()方法启动线程</p>
<p>run:同步</p>
<p>start:调用run(异步)</p>
<h5 id="Runnable-interface"><a href="#Runnable-interface" class="headerlink" title="Runnable interface"></a>Runnable interface</h5><p>1、自定义类实现Runnable接口</p>
<p>2、实现run()方法，编写线程执行体</p>
<p>3、创建线程对象，调用start()方法启动线程</p>
<h5 id="Callable-interface"><a href="#Callable-interface" class="headerlink" title="Callable interface"></a>Callable interface</h5><p>1、实现Callable接口，需要返回值类型</p>
<p>2、重写call方法，需要抛出异常</p>
<p>3、创建目标对象</p>
<p>4、创建执行服务:（ExecutorServices ser = Executors.newFixedThreadPool(1)）</p>
<p>5、提交执行： Future<Boolean> result = ser.submit(t1);</Boolean></p>
<p>6、获取结果：boolean r1 = result.get()</p>
<p>7、关闭服务：ser.shutdownNow();</p>
<h4 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h4><p><img src="/2021/06/29/%E5%A4%9A%E7%BA%BF%E7%A8%8B/image-20210630103705438.png" alt="image-20210630103705438"></p>
<p><img src="/2021/06/29/%E5%A4%9A%E7%BA%BF%E7%A8%8B/image-20210630103746620.png" alt="image-20210630103746620"></p>
<h5 id="停止线程"><a href="#停止线程" class="headerlink" title="停止线程"></a>停止线程</h5><p>1、线程中定义线程体使用的标识</p>
<p>2、线程体使用该标识</p>
<p>3、对外提供方法改变标识</p>
<h5 id="线程休眠"><a href="#线程休眠" class="headerlink" title="线程休眠"></a>线程休眠</h5><p>sleep(time) 指定当前线程阻塞的毫秒数；</p>
<p>sleep存在异常InterruptedException;</p>
<p>sleep时间到达后线程进入就绪状态</p>
<p>sleep可以模拟网络延时、倒计时等。</p>
<p>每一个对象都有一个锁，sleep不会释放锁。</p>
<h5 id="线程礼让"><a href="#线程礼让" class="headerlink" title="线程礼让"></a>线程礼让</h5><p>让当前正在执行的线程暂停，但不阻塞</p>
<p>将线程从运行状态转为就绪状态</p>
<p>让cpu重新调度，礼让不一定成功！</p>
<h5 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h5><p>Join合并线程，等待线程执行完成后，再执行其他线程，其他线程阻塞。</p>
<p>可以看作插队。</p>
<h5 id="State"><a href="#State" class="headerlink" title="State"></a>State</h5><p>new:    尚未启动的线程状态</p>
<p>runnable:    在Java虚拟机中执行的线程状态</p>
<p>blocked:    被阻塞等待监视器锁定的线程状态。</p>
<p>waiting:    正在等待另一个线程执行特定动作的线程。</p>
<p>timed_waiting:    正在等待另一个线程执行动作达到指定等待时间的线程状态。</p>
<p>terminated:    已退出的线程状态。</p>
<h5 id="线程优先级-Priority"><a href="#线程优先级-Priority" class="headerlink" title="线程优先级(Priority)"></a>线程优先级(Priority)</h5><p>java提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程，线程调度器按照优先级来决定调度线程执行。</p>
<p>线程的优先级用数字1—10来表示</p>
<p>获取和设置优先级</p>
<p>getPriority()      setPriority(int x)</p>
<h5 id="守护线程（daemon）"><a href="#守护线程（daemon）" class="headerlink" title="守护线程（daemon）"></a>守护线程（daemon）</h5><p>线程分为用户线程和守护线程</p>
<p>虚拟机必须确保用户线程执行完毕</p>
<p>虚拟机不用等待守护线程执行完毕</p>
<h4 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h4><p>多个线程操作同一个对象，需要进入这个对象的等待池，形成队列。</p>
<h5 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h5><p>同一个对象被多个线程同时操作</p>
<h5 id="锁机制（synchronized）"><a href="#锁机制（synchronized）" class="headerlink" title="锁机制（synchronized）"></a>锁机制（synchronized）</h5><p>当一个线程获得对象的排他锁，独占资源，其他线程必须等待，使用后释放锁即可。</p>
<h5 id="同步方法（synchronized）"><a href="#同步方法（synchronized）" class="headerlink" title="同步方法（synchronized）"></a>同步方法（synchronized）</h5><p>public synchronized void method(int args){}</p>
<h5 id="同步块-synchronized"><a href="#同步块-synchronized" class="headerlink" title="同步块(synchronized)"></a>同步块(synchronized)</h5><p>synchronized (Obj){}</p>
<h5 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h5><p>互斥条件</p>
<p>请求与保持条件</p>
<p>不剥夺条件</p>
<p>循环等待条件</p>
<h5 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h5><h4 id="线程通信"><a href="#线程通信" class="headerlink" title="线程通信"></a>线程通信</h4><p>wait():表示线程一直等待，知道其他的线程通知，会释放锁。</p>
<p>wait(long timeout)：指定等待的毫秒数量</p>
<p>notify：唤醒一个处于等待状态的线程</p>
<p>notifyAll：唤醒同一个对象上所有调用wait()方法的线程，优先级高的线程有限调度</p>
<h5 id="生产者消费者模式"><a href="#生产者消费者模式" class="headerlink" title="生产者消费者模式"></a>生产者消费者模式</h5><p>解决方法：管程法、信号灯法</p>
<h5 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h5><p>提高响应速度</p>
<p>降低资源消耗</p>
<p>便于线程管理</p>
<p>corePoolSize:    核心池大小</p>
<p>maximumPoolSize：最大线程数</p>
<p>keepAliveTime：线程没有任务</p>
<p>ExecutorService：线程池接口。</p>
<p>Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池。</p>
]]></content>
  </entry>
  <entry>
    <title>忒修斯之船</title>
    <url>/2021/01/21/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9/</url>
    <content><![CDATA[<p>忒修斯之船</p>
<p>一艘船的所有零件换完之后还是那艘船吗？</p>
<p>是也不是。</p>
<p>大象与鲸鱼的联系。</p>
<p>他们都是哺乳动物，具有更相似的基因。</p>
<p>他们在何时成为大象和鲸鱼。</p>
<p>大象和鲸鱼的区别是人类的定义的。</p>
<p>所有船是否是那艘船取决于人类如何定义。</p>
<p>忒修斯之船是不是原来的船取决于人类如何定义船与船之间的区别。</p>
<p>如果人类定义所有零件换完就是一艘新船，那么他就是新船。</p>
<p>如果人类定义他们之间有历史的联系，那么他还是那艘船。</p>
]]></content>
  </entry>
  <entry>
    <title>心流</title>
    <url>/2021/04/18/%E5%BF%83%E6%B5%81/</url>
    <content><![CDATA[<h2 id="心流"><a href="#心流" class="headerlink" title="心流"></a>心流</h2><p>​    人生的意义在于什么，为什么同样的生活，有些人能获得快乐和幸福，而有的人却整日惶恐不安，相同的工作，有的人怡然自乐，但有些人却是对其厌烦不已。如何才能在生活中获得幸福，在学习工作中获得快乐的源泉。当我专注于学习知识的本质时，每当我获得新的知识时，都能让我得到莫大的满足感。而当我改变目标，为了“更好的未来”，将目标定为优异的分数，为了满足周围人对自己殷切的期待，努力去获得一个高的分数。当我的目标由获取新的知识转为获取分数和他人的期待之时，学习对我来说，不再是一件轻松愉悦的事情。我的专注点从知识转移到了分数上，我害怕自己成绩不理想，我害怕上课举手回答问题获得别人异样的目光，我害怕自己达不到自己的目标，我害怕辜负亲人朋友对自己的期待，我害怕自己的人生得不到一个“更好的未来”。我再也不能从获取新的知识中获得满足和兴奋感了，学习像是一种负担，沉重的压在我的心上。</p>
<p>​    也许在这个年纪，思考人生的意义多少有点不太合适。我对这个世界和社会的认知远远不够，从网络和课题以及书本获得的世界观、人生观、价值观，多多少少有点过于理想化了，现实和书本中理想的社会总是存在巨大的差距。只有去生活中真正体验人生百态，实际的去认知这个复杂纷呈的社会，才能对其有真实的认知。对世界和社会有了真实的认知之后，才能正确的反应到自己的意识，从而控制意识，改善生活体验的本质。进而获得人生的意义，认清人类意志的极限，接受社会和和人认知的差距，将目标和心流统一，从而在获取人生的意义中获取健康、权力、财富和幸福。</p>
<p>​    健康、权力、财富和幸福是人生最优体验的构成要素。人们追求享受更好医疗环境，向上攀登获得更高的社会地位，努力奋斗赚取更多的金钱，装扮自己吸引异性的关注。最终的目的都是获取心流，从这些活动中获得心灵的满足。但是当我们舍本逐末，人生的追求换成切成碎片的目标。将自己的目标换成30岁成为高级经理、高级政府官员；或者30岁在大城市买车买房，实现财富自由为目标；当我们设定这些目标时，如果专注于去实现它们，并从中获取心流，对于个人来说，确实能持续从中获取快乐。但我们也要为此付出代价，努力的工作可能会让你失去健康，奋不顾身的专注于提升自己层级，也可能会让人失去幸福。选择正确的目标，实现个人目标和宇宙心流的统一。</p>
<p>​    吾日三省吾身，不断的从过去的体验中反省自己，从而获得心流。尽管外在的力量并不一定能从困境中获得快乐，一个健康、幸福、富有、有权力的人，并不一定能够更好的控制意识。一个能从生活中找到乐趣的人，和一个被生活击倒的人，取决于客观环境的综合因素和其个人对这些因素的阐释，面对挑战时，乐观的人视为契机，而悲观的人视为威胁。成为一个自得其乐的自我，将生活中潜在的威胁看作充满乐趣的调整，从而维持内心的和谐。永不厌倦生活，不要感到焦虑，沉浸在周围的事物，经常处于心流状态。</p>
<p>如何体验心流？</p>
<p>第一点是有一个清楚的奋斗的目标；干净利落、镇定自若地做抉择，待人处事保持前后一致，又能保持相当的弹性。</p>
<p>第二点是保持全神贯注；当选定行动的体系后，就将所有的注意力都投入进去。要保持全神贯注，必须学会在行动的机会和本身具备的技能之间取得平衡。既不要抱着不切实际的期望，也不要对自己的潜力丧失信心而停滞不前，去选择微不足道的目标。只有在一个人的行动和行动体系提供的机会相称时，才能全身心的投入当中。</p>
<p>第三点是避免过于自我；在置身于复杂体系的时候，人们必须投入精神能量，才能保持专注，不被淘汰出局。自我意识过强的时候，很容易分心。当人将注意力投入到事物本身上，不为自我烦恼。不再自觉是独立的个体，将自我变得更加强大，将精神能量投入所属的体系，从而得以超越个人的极限。个人与体系结合，使自我的复杂性更上一层楼，曾经拥有爱而失落胜于从未爱过。</p>
<p>第四点是从当前体验中寻求乐趣；学会确立目标、培养技巧、接收反馈，懂得如何投入和参与，在不利的客观环境中，找寻生活中的乐趣。将生活中的随机事件转变成心流，扩充自己的能力，不断的追求成长。发挥出自己的创意，展现杰出的表现。将不同的心流活动，用秩序衔接起来。当走到人生终点的时候，回首往事，不因碌碌无为而羞愧，不因虚度年华而悔恨。从自己做过的事情中创造和谐，将整个人生串联成具有一贯目标的大心流活动。</p>
]]></content>
  </entry>
  <entry>
    <title>开题报告</title>
    <url>/2020/11/30/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
    <content><![CDATA[<h1 id="工作报告"><a href="#工作报告" class="headerlink" title="工作报告"></a>工作报告</h1><p>1—系统整体技术框架（用了什么技术，整体串联起来）</p>
<p>2—系统功能技术（参考哪些项目的技术）</p>
<h1 id="开题报告"><a href="#开题报告" class="headerlink" title="开题报告"></a>开题报告</h1><h2 id="1-立题依据"><a href="#1-立题依据" class="headerlink" title="1-立题依据"></a>1-立题依据</h2><p>1、课题来源</p>
<p>2、选题背景</p>
<p>3、研究目的</p>
<p>4、理论意义</p>
<p>5、实际价值</p>
<h2 id="2-文献综述"><a href="#2-文献综述" class="headerlink" title="2-文献综述"></a>2-文献综述</h2><p>列举论文论点的研究现状</p>
<h2 id="3-研究内容"><a href="#3-研究内容" class="headerlink" title="3-研究内容"></a>3-研究内容</h2><p>1、主要研究内容</p>
<p>2、需要解决的关键技术</p>
<p>3、拟采取的研究方法</p>
<p>4、技术路线和实施方案</p>
<p>5、可行性分析</p>
<p>6、预期目标</p>
<p>7、创新点</p>
<h2 id="4-工作计划"><a href="#4-工作计划" class="headerlink" title="4-工作计划"></a>4-工作计划</h2><p>以表格形式展现下列内容</p>
<p>内容</p>
<p>工作量</p>
<p>起止日期</p>
<p>阶段性成果形式</p>
]]></content>
  </entry>
  <entry>
    <title>局外人</title>
    <url>/2021/04/25/%E5%B1%80%E5%A4%96%E4%BA%BA/</url>
    <content><![CDATA[<p>  在我们的社会中，任何不向这个世界妥协的人，都有可能患上抑郁症。我只是想说，每个孤独的灵魂都有一颗炽烈的心，渴望获得社会的认同和他人的关注。从这个意义上来说，这个世界上的每一个人都希望获得认可。每个孤独的人都是这个社会的局外人：徘徊在社会边缘，游荡在生命的边缘，寂寞而充满肉欲。因为没有朋友，没有亲人，没有关心他的人，可以视为一个被社会抛弃的人。但是永远没有人可以真正的理解他内心的想法，只会为他荒诞的性格感到迷惑。如果你问他要如何对抗这个社会，而他的答案很简单，听从自己内心的想法：拒绝去撒谎。撒谎不仅仅是说假话。事实上，当你说的东西与客观的真相不相符的时候，或者从人心灵的层次来说，说出口的东西比内心世界感受到的更多，就是撒谎。我们习惯撒谎，因为这会让生活更简单。我们会在亲人死后表达出伤心的情绪，即使你并不伤心，我们会对一个女生说我爱你来博取她的好感，也许你并不一定会跟她结婚，我们会找各种各样的借口来让自己看起来与这个社会所要求的更加贴近。然而，当一个人不想掩饰自己感觉，想怎么说就怎么说时，这个人就会让人感觉这人口无遮拦没有情商，于是社会立马会感受到了威胁，从而做出回应，给人贴上“低情商”等标签。当一个人厌恶这个世界时，他就被这个世界抛弃了。</p>
<p>​    当一个人愿意为真正的真实赴死的时候，不是因为他是一个英雄主义者，而是他内心驱使他去这样做，伴随着坚韧不折而又意蕴深厚的激情，去追求一种绝对和真实。即使真实只是生活中消极投射到角落的阴影。但我们仍然要去追求这种真实，正是这种真实，才能使人类战胜自我，去改善外部的客观世界。</p>
]]></content>
  </entry>
  <entry>
    <title>权限思路</title>
    <url>/2021/01/07/%E6%9D%83%E9%99%90%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>权限思路</p>
<p>1—更换安全框架，用springsecurity,和springboot更适配,功能更加强大。</p>
<p>2—使用动态权限方便拓展，更加利于维护，适合企业实际的使用。</p>
<p>3—权限涉及到5张表，还需要配置认证和权限信息，配置拦截器等，利用session或者token维持和前端的会话，需要更多的时间，将权限系统做好。</p>
<p>4—做好权限之后后续的业务会更加简单。</p>
<p>5—java是运行在虚拟机上，windows能运行，Linux也能运行。</p>
]]></content>
  </entry>
  <entry>
    <title>数据库设计</title>
    <url>/2020/11/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><h2 id="1—一对多表设计"><a href="#1—一对多表设计" class="headerlink" title="1—一对多表设计"></a>1—一对多表设计</h2><p>在从表中创建外键指向主表的主键</p>
<p>关系建立语法：</p>
<p>alter table 从表名 add constraint[外键名] foreign key (从表外键字段名) references 主表名（主表主键）</p>
<p>关系删除语法：</p>
<p>alter table 从表名 drop foreign key 外键名</p>
<h2 id="2—多对多表设计"><a href="#2—多对多表设计" class="headerlink" title="2—多对多表设计"></a>2—多对多表设计</h2><p>添加一张中间表，让中间表的两个字段作为外键指向各自表的主键。</p>
]]></content>
  </entry>
  <entry>
    <title>每日感悟</title>
    <url>/2021/05/11/%E6%AF%8F%E6%97%A5%E6%84%9F%E6%82%9F/</url>
    <content><![CDATA[<p>每日感悟</p>
<p>每个人都有认知的局限性     2021-5-11</p>
]]></content>
  </entry>
  <entry>
    <title>接口文档</title>
    <url>/2020/12/28/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="接口文档"><a href="#接口文档" class="headerlink" title="接口文档"></a>接口文档</h2><h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><div class="table-container">
<table>
<thead>
<tr>
<th>接口名</th>
<th>请求方式</th>
<th>请求参数</th>
<th>请求地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>获取所有用户</td>
<td>get</td>
<td>无参</td>
<td>findAllUser</td>
</tr>
<tr>
<td>添加用户</td>
<td>post</td>
<td><a href="{     userID:&quot;&quot;,     empName:&quot;&quot;,     username:&quot;&quot;,     password:&quot;&quot;,     department:&quot;&quot;,     post:&quot;&quot;  },">json</a></td>
<td>addUser</td>
</tr>
<tr>
<td>根据ID获取用户</td>
<td>get</td>
<td>userID</td>
<td>getUserByID?userID=</td>
</tr>
<tr>
<td>根据ID删除用户</td>
<td>get</td>
<td>userID</td>
<td>deleteUser?userID=</td>
</tr>
<tr>
<td>修改用户</td>
<td>post</td>
<td>userID</td>
<td>updateUser</td>
</tr>
</tbody>
</table>
</div>
<h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><p><img src="/2020/12/28/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/image-20201231093523334.png" alt="image-20201231093523334"></p>
<h2 id="打印消息"><a href="#打印消息" class="headerlink" title="打印消息"></a>打印消息</h2><p><img src="/2020/12/28/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/image-20201231111010581.png" alt="image-20201231111010581"></p>
]]></content>
  </entry>
  <entry>
    <title>权限管理需求分析</title>
    <url>/2021/01/06/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="权限管理需求分析"><a href="#权限管理需求分析" class="headerlink" title="权限管理需求分析"></a>权限管理需求分析</h1><p>1—用户管理</p>
<p>2—角色管理</p>
<p>3—菜单管理</p>
<p>4—API管理</p>
<p>5—权限分配</p>
<p>角色-用户分配</p>
<p>角色-菜单分配</p>
<p>角色-api分配</p>
<p>6—其他可拓展</p>
<h2 id="登录流程"><a href="#登录流程" class="headerlink" title="登录流程"></a>登录流程</h2><p><img src="/2021/01/06/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/image-20210106092824704.png" alt="image-20210106092824704"></p>
<h2 id="携带token访问api流程图"><a href="#携带token访问api流程图" class="headerlink" title="携带token访问api流程图"></a>携带token访问api流程图</h2><p><img src="/2021/01/06/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/image-20210106092927806.png" alt="image-20210106092927806"></p>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="/2021/01/06/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/image-20210106095315631.png" alt="image-20210106095315631"></p>
]]></content>
  </entry>
  <entry>
    <title>网络编程</title>
    <url>/2021/07/01/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1>]]></content>
  </entry>
  <entry>
    <title>联想记忆法</title>
    <url>/2021/01/01/%E8%81%94%E6%83%B3%E8%AE%B0%E5%BF%86%E6%B3%95/</url>
    <content><![CDATA[<h1 id="联想记忆法"><a href="#联想记忆法" class="headerlink" title="联想记忆法"></a>联想记忆法</h1><p>1：衣服</p>
<p>2：耳环</p>
<p>3：山</p>
<p>4：纸</p>
<p>5：武功</p>
<p>6：遛狗</p>
<p>7：妻子</p>
<p>8：巴掌</p>
<p>9：酒杯</p>
<p>10：石头</p>
]]></content>
  </entry>
  <entry>
    <title>MySQL环境变量配置</title>
    <url>/2020/06/15/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="第一步：复制mysql-exe的文件目录"><a href="#第一步：复制mysql-exe的文件目录" class="headerlink" title="第一步：复制mysql.exe的文件目录"></a>第一步：复制mysql.exe的文件目录</h1><img src="/2020/06/15/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/mysql%E9%85%8D%E7%BD%AE1.jpg" class title="mysql">
<h1 id="第二步：将其复制到系统变量Path中"><a href="#第二步：将其复制到系统变量Path中" class="headerlink" title="第二步：将其复制到系统变量Path中"></a>第二步：将其复制到系统变量Path中</h1><img src="/2020/06/15/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/MySQL%E9%85%8D%E7%BD%AE2.jpg" class title="mysql">
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>环境变量</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云（centos）部署项目</title>
    <url>/2021/10/29/%E9%98%BF%E9%87%8C%E4%BA%91%EF%BC%88centos%EF%BC%89%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="阿里云（centos）部署项目"><a href="#阿里云（centos）部署项目" class="headerlink" title="阿里云（centos）部署项目"></a>阿里云（centos）部署项目</h1><h4 id="1——搭建web应用环境-usr-local"><a href="#1——搭建web应用环境-usr-local" class="headerlink" title="1——搭建web应用环境(usr/local)"></a>1——搭建web应用环境(usr/local)</h4><p>(1)JDK</p>
<p>(2)Tomcat</p>
<p>(3)Nginx</p>
<p>(4)Mysql</p>
]]></content>
  </entry>
  <entry>
    <title>菜单接口</title>
    <url>/2021/01/21/%E8%8F%9C%E5%8D%95%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<p>菜单接口</p>
<p><img src="/2021/01/21/%E8%8F%9C%E5%8D%95%E6%8E%A5%E5%8F%A3/Users\63458\AppData\Roaming\Typora\typora-user-images\image-20210121135129443.png" alt="image-20210121135129443">**</p>
]]></content>
  </entry>
  <entry>
    <title>需求分析</title>
    <url>/2020/11/27/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>1—了解整个公司的结构</p>
<p>2—了解声学部的结构</p>
<p>3—了解项目开发的流程。</p>
<p>4—产品（公司的需求）</p>
<p>5—项目（公司正在执行的）</p>
<p>一、产品与项目的区别</p>
<p>1、定位不同</p>
<p>产品是需求方，决定做什么。</p>
<p>项目是执行方，解决的是如何做的问题。</p>
<p>2、使用者不同</p>
<p>产品由产品经理使用和管理，记录需求，规划产品的开发计划。</p>
<p>项目由项目经理使用和管理，关联需求，分解任务，组建团队，领导团队成员进行开发工作。全程把控项目的进展。</p>
<p>3、周期不同</p>
<p>项目的周期一般较短。项目任务开发完毕，发布新版本，项目就算结束。</p>
<p>产品的周期较长，是一个不断成长、完善和维护的过程，类似于人的成长。</p>
<p>每个项目只进行一次，完成就关闭，生命周期结束。而产品是不断被更新的，没有完成的概念。被新产品替代，生命周期才算结束。</p>
<p>二、产品和项目的关系</p>
<p>产品和项目是相辅相成的关系，产品的开发是通过一个个项目去完成。</p>
<p>产品需求，通过项目去实现。不断迭代开发，推进产品版本的更新。</p>
]]></content>
  </entry>
  <entry>
    <title>项目管理系统设计与实现技术栈</title>
    <url>/2020/11/24/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E6%8A%80%E6%9C%AF%E6%A0%88/</url>
    <content><![CDATA[<h1 id="项目管理系统设计与实现技术栈"><a href="#项目管理系统设计与实现技术栈" class="headerlink" title="项目管理系统设计与实现技术栈"></a>项目管理系统设计与实现技术栈</h1><h2 id="1—SpringBoot"><a href="#1—SpringBoot" class="headerlink" title="1—SpringBoot"></a>1—SpringBoot</h2><h2 id="2—MyBatis"><a href="#2—MyBatis" class="headerlink" title="2—MyBatis"></a>2—MyBatis</h2><h2 id="3—Shiro-安全验证和权限管理"><a href="#3—Shiro-安全验证和权限管理" class="headerlink" title="3—Shiro(安全验证和权限管理)"></a>3—Shiro(安全验证和权限管理)</h2><h2 id="4—Vue"><a href="#4—Vue" class="headerlink" title="4—Vue"></a>4—Vue</h2><p>Restful——json</p>
<h2 id="5—Echarts"><a href="#5—Echarts" class="headerlink" title="5—Echarts"></a>5—Echarts</h2><h2 id="6—POI（读写excel、word数据）"><a href="#6—POI（读写excel、word数据）" class="headerlink" title="6—POI（读写excel、word数据）"></a>6—POI（读写excel、word数据）</h2><h2 id="7—mysql"><a href="#7—mysql" class="headerlink" title="7—mysql"></a>7—mysql</h2><h2 id="8—MVVM优点"><a href="#8—MVVM优点" class="headerlink" title="8—MVVM优点"></a>8—MVVM优点</h2><p>MVVM模式和MVC模式一样，主要目的是分离<a href="https://baike.baidu.com/item/视图" target="_blank" rel="noopener">视图</a>（View）和模型（Model），有几大优点</p>
<p><strong>1. 低耦合</strong>。视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的”View”上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</p>
<p><strong>2. 可重用性</strong>。你可以把一些视图逻辑放在一个ViewModel里面，让很多view重用这段视图逻辑。</p>
<p><strong>3. 独立开发</strong>。开发人员可以专注于业务逻辑和数据的开发（ViewModel），设计人员可以专注于页面设计，使用Expression Blend可以很容易设计界面并生成xaml代码。</p>
<p><strong>4. 可测试</strong>。界面素来是比较难于测试的，测试可以针对ViewModel来写</p>
]]></content>
  </entry>
  <entry>
    <title>阿里云服务器</title>
    <url>/2021/02/01/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>阿里云服务器</p>
<p><img src="/2021/02/01/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20210201091758014.png" alt="image-20210201091758014"></p>
<p>你好</p>
<p>![image-20210206204248986](阿里云服务器.assets/image-20210206204248986.png</p>
<p>永远不要评论别人。。。。。。。。！</p>
]]></content>
  </entry>
  <entry>
    <title>项目管理系统</title>
    <url>/2020/11/11/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="项目管理系统"><a href="#项目管理系统" class="headerlink" title="项目管理系统"></a>项目管理系统</h1><p>1-添加Thymeleaf   jar包  √</p>
<p>模板引擎Thymeleaf、JSP等的作用：将数据库的数据渲染的web页面。</p>
<p>controller    控制层。控制html页面跳转</p>
<p>dao    数据接口。处理数据，提供增删改查操作。</p>
<p>pojo    数据。</p>
<h5 id="2-dashboard页面"><a href="#2-dashboard页面" class="headerlink" title="2-dashboard页面"></a>2-dashboard页面</h5><p>员工管理</p>
<p>个人周报</p>
<p>部门周报</p>
<p>3-controller调用service层</p>
<h1 id="4—导师需求：数据库采用SQLlite"><a href="#4—导师需求：数据库采用SQLlite" class="headerlink" title="4—导师需求：数据库采用SQLlite"></a>4—导师需求：数据库采用SQLlite</h1><h2 id="5-前端框架：BootStrap-Layui，semantic-ui"><a href="#5-前端框架：BootStrap-Layui，semantic-ui" class="headerlink" title="5-前端框架：BootStrap,Layui，semantic-ui"></a>5-前端框架：BootStrap,Layui，semantic-ui</h2><p>栅格系统</p>
<p>导航栏</p>
<p>侧边栏</p>
<p>表单</p>
<h2 id="6-项目开发流程"><a href="#6-项目开发流程" class="headerlink" title="6-项目开发流程"></a>6-项目开发流程</h2><p>1：设计好前端。</p>
<p>2：设计数据库。（重点）</p>
<p>3：前端能独立运行</p>
<p>4：设计好数据库接口</p>
<p>5：前后端联结调试</p>
<h2 id="7-编程规范"><a href="#7-编程规范" class="headerlink" title="7-编程规范"></a>7-编程规范</h2><p>1.工程启动类(ApplicationServer.java)置于com.springboot.build包下</p>
<p>　　　　2.实体类(domain)置于com.springboot.domain</p>
<p>　　　　3.数据访问层(Dao)置于com.springboot.repository</p>
<p>　　　　4.数据服务层(Service)置于com,springboot.service,数据服务的实现接口(serviceImpl)至于com.springboot.service.impl</p>
<p>　　　　5.前端控制器(Controller)置于com.springboot.controller</p>
<p>　　　　6.工具类(utils)置于com.springboot.utils</p>
<p>　　　　7.常量接口类(constant)置于com.springboot.constant</p>
<p>　　　　8.配置信息类(config)置于com.springboot.config</p>
<p>　　　　9.数据传输类(vo)置于com.springboot.vo</p>
<p>8—SrpingBoot与数据库访问</p>
<p>JDBC、MyBatis、Spring Data JPA</p>
<h4 id="9—数据库连接配置"><a href="#9—数据库连接配置" class="headerlink" title="9—数据库连接配置"></a>9—数据库连接配置</h4><p>在application键入</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//localhost:3306/pro_management?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure>
<p>注意点：</p>
<p>1—pom.xml里mysql-connector-java-jar包版本与数据库版本一致</p>
<p>2—mysql8版本以上com.mysql.<strong>cj</strong>.jdbc.Driver添加cj。</p>
<h1 id="10—周末任务"><a href="#10—周末任务" class="headerlink" title="10—周末任务"></a>10—周末任务</h1><p>1—实现周报统计的功能，完成数据的增删改查工作</p>
<p>2—优化前端页面</p>
<p>3—添加Security，控制访问权限。</p>
<h1 id="11-什么是Druid？"><a href="#11-什么是Druid？" class="headerlink" title="11.什么是Druid？"></a>11<strong>.什么是Druid？</strong></h1><p>Druid是一个高效的数据查询系统，主要解决的是对于大量的基于时序的数据进行聚合查询。数据可以实时摄入，进入到Druid后立即可查，同时数据是几乎是不可变。通常是基于时序的事实事件，事实发生后进入Druid，外部系统就可以对该事实进行查询。 </p>
]]></content>
  </entry>
  <entry>
    <title>项目参考技术</title>
    <url>/2020/12/01/%E9%A1%B9%E7%9B%AE%E5%8F%82%E8%80%83%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<h1 id="项目参考技术"><a href="#项目参考技术" class="headerlink" title="项目参考技术"></a>项目参考技术</h1><p>zentao</p>
<p>oracle primavera p6 eppm</p>
<h2 id="工作流技术"><a href="#工作流技术" class="headerlink" title="工作流技术"></a>工作流技术</h2><p>activiti</p>
<p>Shark</p>
<p>Osworkflow</p>
<p>jbpm</p>
]]></content>
  </entry>
  <entry>
    <title>静态测试和动态测试</title>
    <url>/2021/05/05/%E9%9D%99%E6%80%81%E6%B5%8B%E8%AF%95%E5%92%8C%E5%8A%A8%E6%80%81%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>软件测试技术是软件开发过程中的一个重要组成部分，是贯穿整个软件开发生命周期、对软件产品（包括阶段性产品）进行验证和确认的活动过程，其目的是尽快尽早地发现在软件产品中所存在的各种问题——与用户需求、预先定义的不一致性。检查软件产品的bug。写成测试报告，交于开发人员修改。软件测试人员的基本目标是发现软件中的错误。</p>
<ol>
<li><p>是为了发现程序中存在的错误而执行程序；</p>
</li>
<li><p>是为了证明程序有错，而不是证明程序无错误。</p>
</li>
<li><p><a href="https://baike.baidu.com/item/软件测试" target="_blank" rel="noopener">软件测试</a>的目的是为了保证软件产品的最终质量，在软件开发的过程中，对软件产品进行质量控制。一般来说软件测试应由独立的产品评测中心负责，严格按照软件测试流程，制定<a href="https://baike.baidu.com/item/测试计划" target="_blank" rel="noopener">测试计划</a>、测试方案、测试规范，实施测试，对测试记录进行分析，并根据回归测试情况撰写测试报告。测试是为了证明程序有错，而不能保证程序没有错误。</p>
</li>
<li><p>软件测试（英语：Software Testing），描述一种用来促进鉴定软件的正确性、完整性、安全性和质量的过程。换句话说，软件测试是一种实际输出与预期输出之间的审核或者比较过程。</p>
</li>
<li><p>1、 确保产品是健壮的和适应用户环境的 健壮性即稳定性，是产品质量的基本要求，尤其对于一个用于事务关键或时间关键的工作环境中。另外就是不能假设用户的环境(某些项目可能除外)，如：报业用户许多配置是比较低的，而且是和某些第三方产品同时使用的。<br>2、 确保产品满足性能和效率的要求 使用起来系统运行效率低(性能低)、或用户界面不友好、用户操作不方便(效率低)的产品不能说是一个有竞争力的产品。用户最关心的不是你的技术有多先进、功能有多强大，而是他能从这些技术、这些功能中得到多少好处。也就是说，用户关心的是他能从中取出多少，而不是你已经放进去多少。<br>3、确保产品完成了它所承诺或公布的功能，并且所有用户可以访问到的功能都有明确的书面说明———在某种意义上与ISO9001是同一种思想。产品缺少明确的书面文档，是厂商一种短期行为的表现，也是一种不负责任的表现。所谓短期行为，是指缺少明确的书面文档既不利于产品最后的顺利交付，容易与用户发生矛盾，影响厂商的声誉和将来与用户的合作关系;同时也不利于产品的后期维护，也使厂商支出超额的用户培训和技术支持费用。从长期利益看，这是很不划算的。领测认为接触过的软件产品，很少有向方正这样大大的产品、薄薄的文档。<br>————————————————<br>版权声明：本文为CSDN博主「zmnxy_」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_39841346/article/details/106002515" target="_blank" rel="noopener">https://blog.csdn.net/qq_39841346/article/details/106002515</a></p>
</li>
<li><h3 id="静态测试和动态测试"><a href="#静态测试和动态测试" class="headerlink" title="静态测试和动态测试"></a>静态测试和动态测试</h3><p>（1）静态测试。静态测试的含义是被测程序不运行，只依靠分析或检查源程序的语句、结构、过程等来检查程序是否有错误。即通过对软件的需求规格说明书、设计说明书以及源程序做结构分析和流程图分析，从而来找出错误。例如不匹配的参数，未定义的变量等。 [5] </p>
<p>（2）动态测试。动态测试与静态测试相对应，其是通过运行被测试程序，对得到的运行结果与预期的结果进行比较分析，同时分析运行效率和健壮性能等。这种方法可简单分为三个步骤:构造测试实例、执行程序以及分析结果。 [5] </p>
<h3 id="黑盒测试、白盒测试和灰盒测试"><a href="#黑盒测试、白盒测试和灰盒测试" class="headerlink" title="黑盒测试、白盒测试和灰盒测试"></a>黑盒测试、白盒测试和灰盒测试</h3><p>（1）<a href="https://baike.baidu.com/item/黑盒测试/934030" target="_blank" rel="noopener">黑盒测试</a>。之所以被称为黑盒测试是因为可以将被测程序看成是一个无法打开的黑盒，而工作人员在不考虑任何程序内部结构和特性的条件下，根据需求规格说明书设计测试实例，并检查程序的功能是否能够按照规范说明准确无误的运行。其主要是对软件界面和软件功能进行测试。对于黑盒测试行为必须加以量化才能够有效的保证软件的质量。 [5] </p>
<p>（2）<a href="https://baike.baidu.com/item/白盒测试/934440" target="_blank" rel="noopener">白盒测试</a>。其与黑盒测试不同，它主要是借助程序内部的逻辑和相关信息，通过检测内部动作是否按照设计规格说明书的设定进行，检查每一条通路能否正常工作。白盒测试是从程序结构方面出发对测试用例进行设计。其主要用于检查各个逻辑结构是否合理，对应的模块独立路径是否正常以及内部结构是否有效。常用的白盒测试法有控制流分析、数据流分析、路径分析、程序变异等，其中逻辑覆盖法是主要的测试方法。 [5] </p>
<p>（3）<a href="https://baike.baidu.com/item/灰盒测试/1906276" target="_blank" rel="noopener">灰盒测试</a>。灰盒测试则介于黑盒测试和白盒测试之间。灰盒测试除了重视输出相对于出入的正确性，也看重其内部表现。但是它不可能像白盒测试那样详细和完整。它只是简单的靠一些象征性的现象或标志来判断其内部的运行情况，因此在内部结果出现错误，但输出结果正确的情况下可以采取灰盒测试方法。因为在此情况下灰盒比白盒高效，比黑盒适用性广的优势就凸显出来了。 [5] </p>
<p>作者：POPTEST研学圈<br>链接：<a href="https://zhuanlan.zhihu.com/p/157601306" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/157601306</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</li>
</ol>
<p>   软件测试的方法和技术是多种多样的。 </p>
<p>   　 对于软件测试技术，可以从不同的角度加以分类：</p>
<p>   　　从是否需要执行被测软件的角度，可分为静态测试和动态测试。</p>
<p>   　　从测试是否针对系统的内部结构和具体实现算法的角度来看，可分为白盒测试和黑盒测试；</p>
<p>   <strong>1、黑盒测试</strong></p>
<p>   　　黑盒测试也称功能测试或数据驱动测试，它是在已知产品所应具有的功能，通过测试来检测每个功能是否都能正常使用，在测试时，把程序看作一个不能打开的黑盆子，在完全不考虑程序内部结构和内部特性的情况下，测试者在程序接口进行测试，它只检查程序功能是否按照需求规格说明书的规定正常使用，程序是否能适当地接收输入数锯而产生正确的输出信息，并且保持外部信息（如数据库或文件）的完整性。黑盒测试方法主要有等价类划分、边值分析、因—果图、错误推测等，主要用于软件确认测试。 “黑盒”法着眼于程序外部结构、不考虑内部逻辑结构、针对软件界面和软件功能进行测试。“黑盒”法是穷举输入测试，只有把所有可能的输入都作为测试情况使用，才能以这种方法查出程序中所有的错误。实际上测试情况有无穷多个，人们不仅要测试所有合法的输入，而且还要对那些不合法但是可能的输入进行测试。</p>
<p>   <strong>2、白盒测试</strong></p>
<p>   　　白盒测试也称结构测试或逻辑驱动测试，它是知道产品内部工作过程，可通过测试来检测产品内部动作是否按照规格说明书的规定正常进行，按照程序内部的结构测试程序，检验程序中的每条通路是否都有能按预定要求正确工作，而不顾它的功能，白盒测试的主要方法有逻辑驱动、基路测试等，主要用于软件验证。</p>
<p>   　　“白盒”法全面了解程序内部逻辑结构、对所有逻辑路径进行测试。“白盒”法是穷举路径测试。在使用这一方案时，测试者必须检查程序的内部结构，从检查程序的逻辑着手，得出测试数据。贯穿程序的独立路径数是天文数字。但即使每条路径都测试了仍然可能有错误。第一，穷举路径测试决不能查出程序违反了设计规范，即程序本身是个错误的程序。第二，穷举路径测试不可能查出程序中因遗漏路径而出错。第三，穷举路径测试可能发现不了一些与数据相关的错误。</p>
]]></content>
  </entry>
  <entry>
    <title>项目部署</title>
    <url>/2021/01/21/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>项目部署</p>
<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>java version “1.8.0_221”</p>
<p>mysql  Ver 8.0.12 for Win64 on x86_64 (MySQL Community Server - GPL)</p>
<h2 id="ubuntu-linux"><a href="#ubuntu-linux" class="headerlink" title="ubuntu linux"></a>ubuntu linux</h2><p>openjdk version 1.8.0_255</p>
<p>mysql Ver 5.7.30</p>
]]></content>
  </entry>
  <entry>
    <title>07-01/test</title>
    <url>/2020/11/23/07-01/test/</url>
    <content><![CDATA[/* //输入框
prompt('如果我是DJ，你会爱我吗？');
//输出框
alert('If I was DJ,Do you love me?');
//控制台输出，测试用
console.log("？？？？？？"); */

var age;
age = 18;
console.log(age);
var name;
name = ('ooo');
prompt(name);]]></content>
  </entry>
  <entry>
    <title>07-01/style</title>
    <url>/2020/11/19/07-01/style/</url>
    <content><![CDATA[/*
*{
    text-align: center;
}
*/

h2 {
    font-family: '宋体';
}


/*
p{
    font-family: 'Microsoft YaHei';
    font-size: 20px;
    font-weight: 100;
    font-style: italic;
    color: cadetblue;
}
*/

ol li {
    color: plum;
}

.grey>p {
    color: grey;
}

div,
p,
.gold li {
    color: hotpink;
}


/*未曾访问的链接*/

a:link {
    color: gold;
}


/*访问过的链接*/

a:visited {
    color: green;
}


/*鼠标经过的链接*/

a:hover {
    color: skyblue;
}


/*鼠标正在点击的链接*/

a:active {
    color: tomato;
}

input:focus {
    color: black;
    background-color: cornsilk;
}]]></content>
  </entry>
</search>
